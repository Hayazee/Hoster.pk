{"ast":null,"code":"// Copyright 2011 Mark Cavage <mcavage@gmail.com> All rights reserved.\nvar assert = require('assert');\n\nvar ASN1 = require('./types');\n\nvar errors = require('./errors'); ///--- Globals\n\n\nvar newInvalidAsn1Error = errors.newInvalidAsn1Error;\nvar DEFAULT_OPTS = {\n  size: 1024,\n  growthFactor: 8\n}; ///--- Helpers\n\nfunction merge(from, to) {\n  assert.ok(from);\n  assert.equal(typeof from, 'object');\n  assert.ok(to);\n  assert.equal(typeof to, 'object');\n  var keys = Object.getOwnPropertyNames(from);\n  keys.forEach(function (key) {\n    if (to[key]) return;\n    var value = Object.getOwnPropertyDescriptor(from, key);\n    Object.defineProperty(to, key, value);\n  });\n  return to;\n} ///--- API\n\n\nfunction Writer(options) {\n  options = merge(DEFAULT_OPTS, options || {});\n  this._buf = new Buffer(options.size || 1024);\n  this._size = this._buf.length;\n  this._offset = 0;\n  this._options = options; // A list of offsets in the buffer where we need to insert\n  // sequence tag/len pairs.\n\n  this._seq = [];\n  var self = this;\n\n  this.__defineGetter__('buffer', function () {\n    if (self._seq.length) throw new InvalidAsn1Error(self._seq.length + ' unended sequence(s)');\n    return self._buf.slice(0, self._offset);\n  });\n}\n\nWriter.prototype.writeByte = function (b) {\n  if (typeof b !== 'number') throw new TypeError('argument must be a Number');\n\n  this._ensure(1);\n\n  this._buf[this._offset++] = b;\n};\n\nWriter.prototype.writeInt = function (i, tag) {\n  if (typeof i !== 'number') throw new TypeError('argument must be a Number');\n  if (typeof tag !== 'number') tag = ASN1.Integer;\n  var sz = 4;\n\n  while (((i & 0xff800000) === 0 || (i & 0xff800000) === 0xff800000) && sz > 1) {\n    sz--;\n    i <<= 8;\n  }\n\n  if (sz > 4) throw new InvalidAsn1Error('BER ints cannot be > 0xffffffff');\n\n  this._ensure(2 + sz);\n\n  this._buf[this._offset++] = tag;\n  this._buf[this._offset++] = sz;\n\n  while (sz-- > 0) {\n    this._buf[this._offset++] = (i & 0xff000000) >> 24;\n    i <<= 8;\n  }\n};\n\nWriter.prototype.writeNull = function () {\n  this.writeByte(ASN1.Null);\n  this.writeByte(0x00);\n};\n\nWriter.prototype.writeEnumeration = function (i, tag) {\n  if (typeof i !== 'number') throw new TypeError('argument must be a Number');\n  if (typeof tag !== 'number') tag = ASN1.Enumeration;\n  return this.writeInt(i, tag);\n};\n\nWriter.prototype.writeBoolean = function (b, tag) {\n  if (typeof b !== 'boolean') throw new TypeError('argument must be a Boolean');\n  if (typeof tag !== 'number') tag = ASN1.Boolean;\n\n  this._ensure(3);\n\n  this._buf[this._offset++] = tag;\n  this._buf[this._offset++] = 0x01;\n  this._buf[this._offset++] = b ? 0xff : 0x00;\n};\n\nWriter.prototype.writeString = function (s, tag) {\n  if (typeof s !== 'string') throw new TypeError('argument must be a string (was: ' + typeof s + ')');\n  if (typeof tag !== 'number') tag = ASN1.OctetString;\n  var len = Buffer.byteLength(s);\n  this.writeByte(tag);\n  this.writeLength(len);\n\n  if (len) {\n    this._ensure(len);\n\n    this._buf.write(s, this._offset);\n\n    this._offset += len;\n  }\n};\n\nWriter.prototype.writeBuffer = function (buf, tag) {\n  if (typeof tag !== 'number') throw new TypeError('tag must be a number');\n  if (!Buffer.isBuffer(buf)) throw new TypeError('argument must be a buffer');\n  this.writeByte(tag);\n  this.writeLength(buf.length);\n\n  this._ensure(buf.length);\n\n  buf.copy(this._buf, this._offset, 0, buf.length);\n  this._offset += buf.length;\n};\n\nWriter.prototype.writeStringArray = function (strings) {\n  if (!strings instanceof Array) throw new TypeError('argument must be an Array[String]');\n  var self = this;\n  strings.forEach(function (s) {\n    self.writeString(s);\n  });\n}; // This is really to solve DER cases, but whatever for now\n\n\nWriter.prototype.writeOID = function (s, tag) {\n  if (typeof s !== 'string') throw new TypeError('argument must be a string');\n  if (typeof tag !== 'number') tag = ASN1.OID;\n  if (!/^([0-9]+\\.){3,}[0-9]+$/.test(s)) throw new Error('argument is not a valid OID string');\n\n  function encodeOctet(bytes, octet) {\n    if (octet < 128) {\n      bytes.push(octet);\n    } else if (octet < 16384) {\n      bytes.push(octet >>> 7 | 0x80);\n      bytes.push(octet & 0x7F);\n    } else if (octet < 2097152) {\n      bytes.push(octet >>> 14 | 0x80);\n      bytes.push((octet >>> 7 | 0x80) & 0xFF);\n      bytes.push(octet & 0x7F);\n    } else if (octet < 268435456) {\n      bytes.push(octet >>> 21 | 0x80);\n      bytes.push((octet >>> 14 | 0x80) & 0xFF);\n      bytes.push((octet >>> 7 | 0x80) & 0xFF);\n      bytes.push(octet & 0x7F);\n    } else {\n      bytes.push((octet >>> 28 | 0x80) & 0xFF);\n      bytes.push((octet >>> 21 | 0x80) & 0xFF);\n      bytes.push((octet >>> 14 | 0x80) & 0xFF);\n      bytes.push((octet >>> 7 | 0x80) & 0xFF);\n      bytes.push(octet & 0x7F);\n    }\n  }\n\n  var tmp = s.split('.');\n  var bytes = [];\n  bytes.push(parseInt(tmp[0], 10) * 40 + parseInt(tmp[1], 10));\n  tmp.slice(2).forEach(function (b) {\n    encodeOctet(bytes, parseInt(b, 10));\n  });\n  var self = this;\n\n  this._ensure(2 + bytes.length);\n\n  this.writeByte(tag);\n  this.writeLength(bytes.length);\n  bytes.forEach(function (b) {\n    self.writeByte(b);\n  });\n};\n\nWriter.prototype.writeLength = function (len) {\n  if (typeof len !== 'number') throw new TypeError('argument must be a Number');\n\n  this._ensure(4);\n\n  if (len <= 0x7f) {\n    this._buf[this._offset++] = len;\n  } else if (len <= 0xff) {\n    this._buf[this._offset++] = 0x81;\n    this._buf[this._offset++] = len;\n  } else if (len <= 0xffff) {\n    this._buf[this._offset++] = 0x82;\n    this._buf[this._offset++] = len >> 8;\n    this._buf[this._offset++] = len;\n  } else if (len <= 0xffffff) {\n    this._shift(start, len, 1);\n\n    this._buf[this._offset++] = 0x83;\n    this._buf[this._offset++] = len >> 16;\n    this._buf[this._offset++] = len >> 8;\n    this._buf[this._offset++] = len;\n  } else {\n    throw new InvalidAsn1ERror('Length too long (> 4 bytes)');\n  }\n};\n\nWriter.prototype.startSequence = function (tag) {\n  if (typeof tag !== 'number') tag = ASN1.Sequence | ASN1.Constructor;\n  this.writeByte(tag);\n\n  this._seq.push(this._offset);\n\n  this._ensure(3);\n\n  this._offset += 3;\n};\n\nWriter.prototype.endSequence = function () {\n  var seq = this._seq.pop();\n\n  var start = seq + 3;\n  var len = this._offset - start;\n\n  if (len <= 0x7f) {\n    this._shift(start, len, -2);\n\n    this._buf[seq] = len;\n  } else if (len <= 0xff) {\n    this._shift(start, len, -1);\n\n    this._buf[seq] = 0x81;\n    this._buf[seq + 1] = len;\n  } else if (len <= 0xffff) {\n    this._buf[seq] = 0x82;\n    this._buf[seq + 1] = len >> 8;\n    this._buf[seq + 2] = len;\n  } else if (len <= 0xffffff) {\n    this._shift(start, len, 1);\n\n    this._buf[seq] = 0x83;\n    this._buf[seq + 1] = len >> 16;\n    this._buf[seq + 2] = len >> 8;\n    this._buf[seq + 3] = len;\n  } else {\n    throw new InvalidAsn1Error('Sequence too long');\n  }\n};\n\nWriter.prototype._shift = function (start, len, shift) {\n  assert.ok(start !== undefined);\n  assert.ok(len !== undefined);\n  assert.ok(shift);\n\n  this._buf.copy(this._buf, start + shift, start, start + len);\n\n  this._offset += shift;\n};\n\nWriter.prototype._ensure = function (len) {\n  assert.ok(len);\n\n  if (this._size - this._offset < len) {\n    var sz = this._size * this._options.growthFactor;\n    if (sz - this._offset < len) sz += len;\n    var buf = new Buffer(sz);\n\n    this._buf.copy(buf, 0, 0, this._offset);\n\n    this._buf = buf;\n    this._size = sz;\n  }\n}; ///--- Exported API\n\n\nmodule.exports = Writer;","map":{"version":3,"sources":["/home/hayaz/haya/haya/hosters.pk/node_modules/asn1/lib/ber/writer.js"],"names":["assert","require","ASN1","errors","newInvalidAsn1Error","DEFAULT_OPTS","size","growthFactor","merge","from","to","ok","equal","keys","Object","getOwnPropertyNames","forEach","key","value","getOwnPropertyDescriptor","defineProperty","Writer","options","_buf","Buffer","_size","length","_offset","_options","_seq","self","__defineGetter__","InvalidAsn1Error","slice","prototype","writeByte","b","TypeError","_ensure","writeInt","i","tag","Integer","sz","writeNull","Null","writeEnumeration","Enumeration","writeBoolean","Boolean","writeString","s","OctetString","len","byteLength","writeLength","write","writeBuffer","buf","isBuffer","copy","writeStringArray","strings","Array","writeOID","OID","test","Error","encodeOctet","bytes","octet","push","tmp","split","parseInt","_shift","start","InvalidAsn1ERror","startSequence","Sequence","Constructor","endSequence","seq","pop","shift","undefined","module","exports"],"mappings":"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","sourcesContent":["// Copyright 2011 Mark Cavage <mcavage@gmail.com> All rights reserved.\n\nvar assert = require('assert');\nvar ASN1 = require('./types');\nvar errors = require('./errors');\n\n\n///--- Globals\n\nvar newInvalidAsn1Error = errors.newInvalidAsn1Error;\n\nvar DEFAULT_OPTS = {\n  size: 1024,\n  growthFactor: 8\n};\n\n\n///--- Helpers\n\nfunction merge(from, to) {\n  assert.ok(from);\n  assert.equal(typeof(from), 'object');\n  assert.ok(to);\n  assert.equal(typeof(to), 'object');\n\n  var keys = Object.getOwnPropertyNames(from);\n  keys.forEach(function(key) {\n    if (to[key])\n      return;\n\n    var value = Object.getOwnPropertyDescriptor(from, key);\n    Object.defineProperty(to, key, value);\n  });\n\n  return to;\n}\n\n\n\n///--- API\n\nfunction Writer(options) {\n  options = merge(DEFAULT_OPTS, options || {});\n\n  this._buf = new Buffer(options.size || 1024);\n  this._size = this._buf.length;\n  this._offset = 0;\n  this._options = options;\n\n  // A list of offsets in the buffer where we need to insert\n  // sequence tag/len pairs.\n  this._seq = [];\n\n  var self = this;\n  this.__defineGetter__('buffer', function() {\n    if (self._seq.length)\n      throw new InvalidAsn1Error(self._seq.length + ' unended sequence(s)');\n\n    return self._buf.slice(0, self._offset);\n  });\n}\n\n\nWriter.prototype.writeByte = function(b) {\n  if (typeof(b) !== 'number')\n    throw new TypeError('argument must be a Number');\n\n  this._ensure(1);\n  this._buf[this._offset++] = b;\n};\n\n\nWriter.prototype.writeInt = function(i, tag) {\n  if (typeof(i) !== 'number')\n    throw new TypeError('argument must be a Number');\n  if (typeof(tag) !== 'number')\n    tag = ASN1.Integer;\n\n  var sz = 4;\n\n  while ((((i & 0xff800000) === 0) || ((i & 0xff800000) === 0xff800000)) &&\n         (sz > 1)) {\n    sz--;\n    i <<= 8;\n  }\n\n  if (sz > 4)\n    throw new InvalidAsn1Error('BER ints cannot be > 0xffffffff');\n\n  this._ensure(2 + sz);\n  this._buf[this._offset++] = tag;\n  this._buf[this._offset++] = sz;\n\n  while (sz-- > 0) {\n    this._buf[this._offset++] = ((i & 0xff000000) >> 24);\n    i <<= 8;\n  }\n\n};\n\n\nWriter.prototype.writeNull = function() {\n  this.writeByte(ASN1.Null);\n  this.writeByte(0x00);\n};\n\n\nWriter.prototype.writeEnumeration = function(i, tag) {\n  if (typeof(i) !== 'number')\n    throw new TypeError('argument must be a Number');\n  if (typeof(tag) !== 'number')\n    tag = ASN1.Enumeration;\n\n  return this.writeInt(i, tag);\n};\n\n\nWriter.prototype.writeBoolean = function(b, tag) {\n  if (typeof(b) !== 'boolean')\n    throw new TypeError('argument must be a Boolean');\n  if (typeof(tag) !== 'number')\n    tag = ASN1.Boolean;\n\n  this._ensure(3);\n  this._buf[this._offset++] = tag;\n  this._buf[this._offset++] = 0x01;\n  this._buf[this._offset++] = b ? 0xff : 0x00;\n};\n\n\nWriter.prototype.writeString = function(s, tag) {\n  if (typeof(s) !== 'string')\n    throw new TypeError('argument must be a string (was: ' + typeof(s) + ')');\n  if (typeof(tag) !== 'number')\n    tag = ASN1.OctetString;\n\n  var len = Buffer.byteLength(s);\n  this.writeByte(tag);\n  this.writeLength(len);\n  if (len) {\n    this._ensure(len);\n    this._buf.write(s, this._offset);\n    this._offset += len;\n  }\n};\n\n\nWriter.prototype.writeBuffer = function(buf, tag) {\n  if (typeof(tag) !== 'number')\n    throw new TypeError('tag must be a number');\n  if (!Buffer.isBuffer(buf))\n    throw new TypeError('argument must be a buffer');\n\n  this.writeByte(tag);\n  this.writeLength(buf.length);\n  this._ensure(buf.length);\n  buf.copy(this._buf, this._offset, 0, buf.length);\n  this._offset += buf.length;\n};\n\n\nWriter.prototype.writeStringArray = function(strings) {\n  if ((!strings instanceof Array))\n    throw new TypeError('argument must be an Array[String]');\n\n  var self = this;\n  strings.forEach(function(s) {\n    self.writeString(s);\n  });\n};\n\n// This is really to solve DER cases, but whatever for now\nWriter.prototype.writeOID = function(s, tag) {\n  if (typeof(s) !== 'string')\n    throw new TypeError('argument must be a string');\n  if (typeof(tag) !== 'number')\n    tag = ASN1.OID;\n\n  if (!/^([0-9]+\\.){3,}[0-9]+$/.test(s))\n    throw new Error('argument is not a valid OID string');\n\n  function encodeOctet(bytes, octet) {\n    if (octet < 128) {\n        bytes.push(octet);\n    } else if (octet < 16384) {\n        bytes.push((octet >>> 7) | 0x80);\n        bytes.push(octet & 0x7F);\n    } else if (octet < 2097152) {\n      bytes.push((octet >>> 14) | 0x80);\n      bytes.push(((octet >>> 7) | 0x80) & 0xFF);\n      bytes.push(octet & 0x7F);\n    } else if (octet < 268435456) {\n      bytes.push((octet >>> 21) | 0x80);\n      bytes.push(((octet >>> 14) | 0x80) & 0xFF);\n      bytes.push(((octet >>> 7) | 0x80) & 0xFF);\n      bytes.push(octet & 0x7F);\n    } else {\n      bytes.push(((octet >>> 28) | 0x80) & 0xFF);\n      bytes.push(((octet >>> 21) | 0x80) & 0xFF);\n      bytes.push(((octet >>> 14) | 0x80) & 0xFF);\n      bytes.push(((octet >>> 7) | 0x80) & 0xFF);\n      bytes.push(octet & 0x7F);\n    }\n  }\n\n  var tmp = s.split('.');\n  var bytes = [];\n  bytes.push(parseInt(tmp[0], 10) * 40 + parseInt(tmp[1], 10));\n  tmp.slice(2).forEach(function(b) {\n    encodeOctet(bytes, parseInt(b, 10));\n  });\n\n  var self = this;\n  this._ensure(2 + bytes.length);\n  this.writeByte(tag);\n  this.writeLength(bytes.length);\n  bytes.forEach(function(b) {\n    self.writeByte(b);\n  });\n};\n\n\nWriter.prototype.writeLength = function(len) {\n  if (typeof(len) !== 'number')\n    throw new TypeError('argument must be a Number');\n\n  this._ensure(4);\n\n  if (len <= 0x7f) {\n    this._buf[this._offset++] = len;\n  } else if (len <= 0xff) {\n    this._buf[this._offset++] = 0x81;\n    this._buf[this._offset++] = len;\n  } else if (len <= 0xffff) {\n    this._buf[this._offset++] = 0x82;\n    this._buf[this._offset++] = len >> 8;\n    this._buf[this._offset++] = len;\n  } else if (len <= 0xffffff) {\n    this._shift(start, len, 1);\n    this._buf[this._offset++] = 0x83;\n    this._buf[this._offset++] = len >> 16;\n    this._buf[this._offset++] = len >> 8;\n    this._buf[this._offset++] = len;\n  } else {\n    throw new InvalidAsn1ERror('Length too long (> 4 bytes)');\n  }\n};\n\nWriter.prototype.startSequence = function(tag) {\n  if (typeof(tag) !== 'number')\n    tag = ASN1.Sequence | ASN1.Constructor;\n\n  this.writeByte(tag);\n  this._seq.push(this._offset);\n  this._ensure(3);\n  this._offset += 3;\n};\n\n\nWriter.prototype.endSequence = function() {\n  var seq = this._seq.pop();\n  var start = seq + 3;\n  var len = this._offset - start;\n\n  if (len <= 0x7f) {\n    this._shift(start, len, -2);\n    this._buf[seq] = len;\n  } else if (len <= 0xff) {\n    this._shift(start, len, -1);\n    this._buf[seq] = 0x81;\n    this._buf[seq + 1] = len;\n  } else if (len <= 0xffff) {\n    this._buf[seq] = 0x82;\n    this._buf[seq + 1] = len >> 8;\n    this._buf[seq + 2] = len;\n  } else if (len <= 0xffffff) {\n    this._shift(start, len, 1);\n    this._buf[seq] = 0x83;\n    this._buf[seq + 1] = len >> 16;\n    this._buf[seq + 2] = len >> 8;\n    this._buf[seq + 3] = len;\n  } else {\n    throw new InvalidAsn1Error('Sequence too long');\n  }\n};\n\n\nWriter.prototype._shift = function(start, len, shift) {\n  assert.ok(start !== undefined);\n  assert.ok(len !== undefined);\n  assert.ok(shift);\n\n  this._buf.copy(this._buf, start + shift, start, start + len);\n  this._offset += shift;\n};\n\nWriter.prototype._ensure = function(len) {\n  assert.ok(len);\n\n  if (this._size - this._offset < len) {\n    var sz = this._size * this._options.growthFactor;\n    if (sz - this._offset < len)\n      sz += len;\n\n    var buf = new Buffer(sz);\n\n    this._buf.copy(buf, 0, 0, this._offset);\n    this._buf = buf;\n    this._size = sz;\n  }\n};\n\n\n\n///--- Exported API\n\nmodule.exports = Writer;\n"]},"metadata":{},"sourceType":"script"}