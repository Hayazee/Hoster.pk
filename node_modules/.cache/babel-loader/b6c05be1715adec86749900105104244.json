{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Haya Zeeshan\\\\Desktop\\\\haya\\\\hosting-.pk\\\\src\\\\Test.js\";\nimport React from 'react';\n\nconst Test = () => {\n  function selectNum() {\n    const strUser = numberToSelect.value;\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    id: \"numberToSelect\",\n    onchange: \"selectNum()\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 18\n    }\n  }, \"One\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 5\n    }\n  }, \"Two\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }\n  }, \"Three\")));\n};\n\nexport default Test; // import React from \"react\";\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n//   Link,\n//   useParams\n// } from \"react-router-dom\";\n// Params are placeholders in the URL that begin\n// with a colon, like the `:id` param defined in\n// the route in this example. A similar convention\n// is used for matching dynamic segments in other\n// popular web frameworks like Rails and Express.\n// export default function ParamsExample() {\n//   return (\n//     <Router>\n//       <div>\n//         <h2>Accounts</h2>\n//         <ul>\n//           <li>\n//             <Link to=\"/https://hosters.pk/\">Netflix link</Link>\n//           </li>\n//           <li>\n//             <Link to=\"/zillow-group text\">Zillow Group link</Link>\n//           </li>\n//           <li>\n//             <Link to=\"/yahoo text\">Yahoo link</Link>\n//           </li>\n//           <li>\n//             <Link to=\"/modus-create text\">Modus Create link</Link>\n//           </li>\n//         </ul>\n//         <Switch>\n//           <Route \n//             path=\"/:id\" children={<Child />} \n//             />\n//         </Switch>\n//       </div>\n//     </Router>\n//   );\n// }\n// function Child() {\n// We can use the `useParams` hook here to access\n// the dynamic pieces of the URL.\n//   let { id } = useParams();\n//   return (\n//     <div>\n//       <h3>ID: {id}</h3>\n//     </div>\n//   );\n// }","map":{"version":3,"sources":["C:/Users/Haya Zeeshan/Desktop/haya/hosting-.pk/src/Test.js"],"names":["React","Test","selectNum","strUser","numberToSelect","value"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,IAAI,GAAG,MAAM;AACf,WAASC,SAAT,GAAoB;AAChB,UAAMC,OAAO,GAAGC,cAAc,CAACC,KAA/B;AACH;;AACD,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAQ,IAAA,EAAE,EAAC,gBAAX;AAA4B,IAAA,QAAQ,EAAC,aAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACK;AAAQ,IAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADL,eAER;AAAQ,IAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAFQ,eAGR;AAAQ,IAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAHQ,CADJ,CADJ;AASH,CAbD;;AAeA,eAAeJ,IAAf,C,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACE;AACA;AACF;AAEA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from 'react'\r\n\r\nconst Test = () => {\r\n    function selectNum(){\r\n        const strUser = numberToSelect.value;\r\n    }\r\n    return (\r\n        <div>\r\n            <select id=\"numberToSelect\" onchange=\"selectNum()\">\r\n                 <option value=\"1\">One</option>\r\n    <option value=\"2\">Two</option>\r\n    <option value=\"3\">Three</option>\r\n</select>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Test\r\n\r\n\r\n// import React from \"react\";\r\n// import {\r\n//   BrowserRouter as Router,\r\n//   Switch,\r\n//   Route,\r\n//   Link,\r\n//   useParams\r\n// } from \"react-router-dom\";\r\n\r\n// Params are placeholders in the URL that begin\r\n// with a colon, like the `:id` param defined in\r\n// the route in this example. A similar convention\r\n// is used for matching dynamic segments in other\r\n// popular web frameworks like Rails and Express.\r\n\r\n// export default function ParamsExample() {\r\n//   return (\r\n//     <Router>\r\n//       <div>\r\n//         <h2>Accounts</h2>\r\n//         <ul>\r\n//           <li>\r\n//             <Link to=\"/https://hosters.pk/\">Netflix link</Link>\r\n//           </li>\r\n//           <li>\r\n//             <Link to=\"/zillow-group text\">Zillow Group link</Link>\r\n//           </li>\r\n//           <li>\r\n//             <Link to=\"/yahoo text\">Yahoo link</Link>\r\n//           </li>\r\n//           <li>\r\n//             <Link to=\"/modus-create text\">Modus Create link</Link>\r\n//           </li>\r\n//         </ul>\r\n//         <Switch>\r\n//           <Route \r\n//             path=\"/:id\" children={<Child />} \r\n//             />\r\n//         </Switch>\r\n//       </div>\r\n//     </Router>\r\n//   );\r\n// }\r\n\r\n// function Child() {\r\n  // We can use the `useParams` hook here to access\r\n  // the dynamic pieces of the URL.\r\n//   let { id } = useParams();\r\n  \r\n//   return (\r\n//     <div>\r\n//       <h3>ID: {id}</h3>\r\n//     </div>\r\n//   );\r\n// }\r\n"]},"metadata":{},"sourceType":"module"}