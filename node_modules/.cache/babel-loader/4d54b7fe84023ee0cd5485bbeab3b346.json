{"ast":null,"code":"/**\n * Object#toString() ref for stringify().\n */\nvar toString = Object.prototype.toString;\n/**\n * Object#hasOwnProperty ref\n */\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n/**\n * Array#indexOf shim.\n */\n\nvar indexOf = typeof Array.prototype.indexOf === 'function' ? function (arr, el) {\n  return arr.indexOf(el);\n} : function (arr, el) {\n  for (var i = 0; i < arr.length; i++) {\n    if (arr[i] === el) return i;\n  }\n\n  return -1;\n};\n/**\n * Array.isArray shim.\n */\n\nvar isArray = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n/**\n * Object.keys shim.\n */\n\n\nvar objectKeys = Object.keys || function (obj) {\n  var ret = [];\n\n  for (var key in obj) {\n    if (obj.hasOwnProperty(key)) {\n      ret.push(key);\n    }\n  }\n\n  return ret;\n};\n/**\n * Array#forEach shim.\n */\n\n\nvar forEach = typeof Array.prototype.forEach === 'function' ? function (arr, fn) {\n  return arr.forEach(fn);\n} : function (arr, fn) {\n  for (var i = 0; i < arr.length; i++) fn(arr[i]);\n};\n/**\n * Array#reduce shim.\n */\n\nvar reduce = function (arr, fn, initial) {\n  if (typeof arr.reduce === 'function') return arr.reduce(fn, initial);\n  var res = initial;\n\n  for (var i = 0; i < arr.length; i++) res = fn(res, arr[i]);\n\n  return res;\n};\n/**\n * Cache non-integer test regexp.\n */\n\n\nvar isint = /^[0-9]+$/;\n\nfunction promote(parent, key) {\n  if (parent[key].length == 0) return parent[key] = {};\n  var t = {};\n\n  for (var i in parent[key]) {\n    if (hasOwnProperty.call(parent[key], i)) {\n      t[i] = parent[key][i];\n    }\n  }\n\n  parent[key] = t;\n  return t;\n}\n\nfunction parse(parts, parent, key, val) {\n  var part = parts.shift(); // illegal\n\n  if (Object.getOwnPropertyDescriptor(Object.prototype, key)) return; // end\n\n  if (!part) {\n    if (isArray(parent[key])) {\n      parent[key].push(val);\n    } else if ('object' == typeof parent[key]) {\n      parent[key] = val;\n    } else if ('undefined' == typeof parent[key]) {\n      parent[key] = val;\n    } else {\n      parent[key] = [parent[key], val];\n    } // array\n\n  } else {\n    var obj = parent[key] = parent[key] || [];\n\n    if (']' == part) {\n      if (isArray(obj)) {\n        if ('' != val) obj.push(val);\n      } else if ('object' == typeof obj) {\n        obj[objectKeys(obj).length] = val;\n      } else {\n        obj = parent[key] = [parent[key], val];\n      } // prop\n\n    } else if (~indexOf(part, ']')) {\n      part = part.substr(0, part.length - 1);\n      if (!isint.test(part) && isArray(obj)) obj = promote(parent, key);\n      parse(parts, obj, part, val); // key\n    } else {\n      if (!isint.test(part) && isArray(obj)) obj = promote(parent, key);\n      parse(parts, obj, part, val);\n    }\n  }\n}\n/**\n * Merge parent key/val pair.\n */\n\n\nfunction merge(parent, key, val) {\n  if (~indexOf(key, ']')) {\n    var parts = key.split('['),\n        len = parts.length,\n        last = len - 1;\n    parse(parts, parent, 'base', val); // optimize\n  } else {\n    if (!isint.test(key) && isArray(parent.base)) {\n      var t = {};\n\n      for (var k in parent.base) t[k] = parent.base[k];\n\n      parent.base = t;\n    }\n\n    set(parent.base, key, val);\n  }\n\n  return parent;\n}\n/**\n * Compact sparse arrays.\n */\n\n\nfunction compact(obj) {\n  if ('object' != typeof obj) return obj;\n\n  if (isArray(obj)) {\n    var ret = [];\n\n    for (var i in obj) {\n      if (hasOwnProperty.call(obj, i)) {\n        ret.push(obj[i]);\n      }\n    }\n\n    return ret;\n  }\n\n  for (var key in obj) {\n    obj[key] = compact(obj[key]);\n  }\n\n  return obj;\n}\n/**\n * Parse the given obj.\n */\n\n\nfunction parseObject(obj) {\n  var ret = {\n    base: {}\n  };\n  forEach(objectKeys(obj), function (name) {\n    merge(ret, name, obj[name]);\n  });\n  return compact(ret.base);\n}\n/**\n * Parse the given str.\n */\n\n\nfunction parseString(str) {\n  var ret = reduce(String(str).split('&'), function (ret, pair) {\n    var eql = indexOf(pair, '='),\n        brace = lastBraceInKey(pair),\n        key = pair.substr(0, brace || eql),\n        val = pair.substr(brace || eql, pair.length),\n        val = val.substr(indexOf(val, '=') + 1, val.length); // ?foo\n\n    if ('' == key) key = pair, val = '';\n    if ('' == key) return ret;\n    return merge(ret, decode(key), decode(val));\n  }, {\n    base: {}\n  }).base;\n  return compact(ret);\n}\n/**\n * Parse the given query `str` or `obj`, returning an object.\n *\n * @param {String} str | {Object} obj\n * @return {Object}\n * @api public\n */\n\n\nexports.parse = function (str) {\n  if (null == str || '' == str) return {};\n  return 'object' == typeof str ? parseObject(str) : parseString(str);\n};\n/**\n * Turn the given `obj` into a query string\n *\n * @param {Object} obj\n * @return {String}\n * @api public\n */\n\n\nvar stringify = exports.stringify = function (obj, prefix) {\n  if (isArray(obj)) {\n    return stringifyArray(obj, prefix);\n  } else if ('[object Object]' == toString.call(obj)) {\n    return stringifyObject(obj, prefix);\n  } else if ('string' == typeof obj) {\n    return stringifyString(obj, prefix);\n  } else {\n    return prefix + '=' + encodeURIComponent(String(obj));\n  }\n};\n/**\n * Stringify the given `str`.\n *\n * @param {String} str\n * @param {String} prefix\n * @return {String}\n * @api private\n */\n\n\nfunction stringifyString(str, prefix) {\n  if (!prefix) throw new TypeError('stringify expects an object');\n  return prefix + '=' + encodeURIComponent(str);\n}\n/**\n * Stringify the given `arr`.\n *\n * @param {Array} arr\n * @param {String} prefix\n * @return {String}\n * @api private\n */\n\n\nfunction stringifyArray(arr, prefix) {\n  var ret = [];\n  if (!prefix) throw new TypeError('stringify expects an object');\n\n  for (var i = 0; i < arr.length; i++) {\n    ret.push(stringify(arr[i], prefix + '[' + i + ']'));\n  }\n\n  return ret.join('&');\n}\n/**\n * Stringify the given `obj`.\n *\n * @param {Object} obj\n * @param {String} prefix\n * @return {String}\n * @api private\n */\n\n\nfunction stringifyObject(obj, prefix) {\n  var ret = [],\n      keys = objectKeys(obj),\n      key;\n\n  for (var i = 0, len = keys.length; i < len; ++i) {\n    key = keys[i];\n    if ('' == key) continue;\n\n    if (null == obj[key]) {\n      ret.push(encodeURIComponent(key) + '=');\n    } else {\n      ret.push(stringify(obj[key], prefix ? prefix + '[' + encodeURIComponent(key) + ']' : encodeURIComponent(key)));\n    }\n  }\n\n  return ret.join('&');\n}\n/**\n * Set `obj`'s `key` to `val` respecting\n * the weird and wonderful syntax of a qs,\n * where \"foo=bar&foo=baz\" becomes an array.\n *\n * @param {Object} obj\n * @param {String} key\n * @param {String} val\n * @api private\n */\n\n\nfunction set(obj, key, val) {\n  var v = obj[key];\n  if (Object.getOwnPropertyDescriptor(Object.prototype, key)) return;\n\n  if (undefined === v) {\n    obj[key] = val;\n  } else if (isArray(v)) {\n    v.push(val);\n  } else {\n    obj[key] = [v, val];\n  }\n}\n/**\n * Locate last brace in `str` within the key.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\n\nfunction lastBraceInKey(str) {\n  var len = str.length,\n      brace,\n      c;\n\n  for (var i = 0; i < len; ++i) {\n    c = str[i];\n    if (']' == c) brace = false;\n    if ('[' == c) brace = true;\n    if ('=' == c && !brace) return i;\n  }\n}\n/**\n * Decode `str`.\n *\n * @param {String} str\n * @return {String}\n * @api private\n */\n\n\nfunction decode(str) {\n  try {\n    return decodeURIComponent(str.replace(/\\+/g, ' '));\n  } catch (err) {\n    return str;\n  }\n}","map":{"version":3,"sources":["/home/hayaz/haya/haya/hosters.pk/node_modules/whmcs/node_modules/qs/index.js"],"names":["toString","Object","prototype","hasOwnProperty","indexOf","Array","arr","el","i","length","isArray","call","objectKeys","keys","obj","ret","key","push","forEach","fn","reduce","initial","res","isint","promote","parent","t","parse","parts","val","part","shift","getOwnPropertyDescriptor","substr","test","merge","split","len","last","base","k","set","compact","parseObject","name","parseString","str","String","pair","eql","brace","lastBraceInKey","decode","exports","stringify","prefix","stringifyArray","stringifyObject","stringifyString","encodeURIComponent","TypeError","join","v","undefined","c","decodeURIComponent","replace","err"],"mappings":"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","sourcesContent":["/**\n * Object#toString() ref for stringify().\n */\n\nvar toString = Object.prototype.toString;\n\n/**\n * Object#hasOwnProperty ref\n */\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\n/**\n * Array#indexOf shim.\n */\n\nvar indexOf = typeof Array.prototype.indexOf === 'function'\n  ? function(arr, el) { return arr.indexOf(el); }\n  : function(arr, el) {\n      for (var i = 0; i < arr.length; i++) {\n        if (arr[i] === el) return i;\n      }\n      return -1;\n    };\n\n/**\n * Array.isArray shim.\n */\n\nvar isArray = Array.isArray || function(arr) {\n  return toString.call(arr) == '[object Array]';\n};\n\n/**\n * Object.keys shim.\n */\n\nvar objectKeys = Object.keys || function(obj) {\n  var ret = [];\n  for (var key in obj) {\n    if (obj.hasOwnProperty(key)) {\n      ret.push(key);\n    }\n  }\n  return ret;\n};\n\n/**\n * Array#forEach shim.\n */\n\nvar forEach = typeof Array.prototype.forEach === 'function'\n  ? function(arr, fn) { return arr.forEach(fn); }\n  : function(arr, fn) {\n      for (var i = 0; i < arr.length; i++) fn(arr[i]);\n    };\n\n/**\n * Array#reduce shim.\n */\n\nvar reduce = function(arr, fn, initial) {\n  if (typeof arr.reduce === 'function') return arr.reduce(fn, initial);\n  var res = initial;\n  for (var i = 0; i < arr.length; i++) res = fn(res, arr[i]);\n  return res;\n};\n\n/**\n * Cache non-integer test regexp.\n */\n\nvar isint = /^[0-9]+$/;\n\nfunction promote(parent, key) {\n  if (parent[key].length == 0) return parent[key] = {}\n  var t = {};\n  for (var i in parent[key]) {\n    if (hasOwnProperty.call(parent[key], i)) {\n      t[i] = parent[key][i];\n    }\n  }\n  parent[key] = t;\n  return t;\n}\n\nfunction parse(parts, parent, key, val) {\n  var part = parts.shift();\n  \n  // illegal\n  if (Object.getOwnPropertyDescriptor(Object.prototype, key)) return;\n  \n  // end\n  if (!part) {\n    if (isArray(parent[key])) {\n      parent[key].push(val);\n    } else if ('object' == typeof parent[key]) {\n      parent[key] = val;\n    } else if ('undefined' == typeof parent[key]) {\n      parent[key] = val;\n    } else {\n      parent[key] = [parent[key], val];\n    }\n    // array\n  } else {\n    var obj = parent[key] = parent[key] || [];\n    if (']' == part) {\n      if (isArray(obj)) {\n        if ('' != val) obj.push(val);\n      } else if ('object' == typeof obj) {\n        obj[objectKeys(obj).length] = val;\n      } else {\n        obj = parent[key] = [parent[key], val];\n      }\n      // prop\n    } else if (~indexOf(part, ']')) {\n      part = part.substr(0, part.length - 1);\n      if (!isint.test(part) && isArray(obj)) obj = promote(parent, key);\n      parse(parts, obj, part, val);\n      // key\n    } else {\n      if (!isint.test(part) && isArray(obj)) obj = promote(parent, key);\n      parse(parts, obj, part, val);\n    }\n  }\n}\n\n/**\n * Merge parent key/val pair.\n */\n\nfunction merge(parent, key, val){\n  if (~indexOf(key, ']')) {\n    var parts = key.split('[')\n      , len = parts.length\n      , last = len - 1;\n    parse(parts, parent, 'base', val);\n    // optimize\n  } else {\n    if (!isint.test(key) && isArray(parent.base)) {\n      var t = {};\n      for (var k in parent.base) t[k] = parent.base[k];\n      parent.base = t;\n    }\n    set(parent.base, key, val);\n  }\n\n  return parent;\n}\n\n/**\n * Compact sparse arrays.\n */\n\nfunction compact(obj) {\n  if ('object' != typeof obj) return obj;\n\n  if (isArray(obj)) {\n    var ret = [];\n\n    for (var i in obj) {\n      if (hasOwnProperty.call(obj, i)) {\n        ret.push(obj[i]);\n      }\n    }\n\n    return ret;\n  }\n\n  for (var key in obj) {\n    obj[key] = compact(obj[key]);\n  }\n\n  return obj;\n}\n\n/**\n * Parse the given obj.\n */\n\nfunction parseObject(obj){\n  var ret = { base: {} };\n\n  forEach(objectKeys(obj), function(name){\n    merge(ret, name, obj[name]);\n  });\n\n  return compact(ret.base);\n}\n\n/**\n * Parse the given str.\n */\n\nfunction parseString(str){\n  var ret = reduce(String(str).split('&'), function(ret, pair){\n    var eql = indexOf(pair, '=')\n      , brace = lastBraceInKey(pair)\n      , key = pair.substr(0, brace || eql)\n      , val = pair.substr(brace || eql, pair.length)\n      , val = val.substr(indexOf(val, '=') + 1, val.length);\n\n    // ?foo\n    if ('' == key) key = pair, val = '';\n    if ('' == key) return ret;\n\n    return merge(ret, decode(key), decode(val));\n  }, { base: {} }).base;\n\n  return compact(ret);\n}\n\n/**\n * Parse the given query `str` or `obj`, returning an object.\n *\n * @param {String} str | {Object} obj\n * @return {Object}\n * @api public\n */\n\nexports.parse = function(str){\n  if (null == str || '' == str) return {};\n  return 'object' == typeof str\n    ? parseObject(str)\n    : parseString(str);\n};\n\n/**\n * Turn the given `obj` into a query string\n *\n * @param {Object} obj\n * @return {String}\n * @api public\n */\n\nvar stringify = exports.stringify = function(obj, prefix) {\n  if (isArray(obj)) {\n    return stringifyArray(obj, prefix);\n  } else if ('[object Object]' == toString.call(obj)) {\n    return stringifyObject(obj, prefix);\n  } else if ('string' == typeof obj) {\n    return stringifyString(obj, prefix);\n  } else {\n    return prefix + '=' + encodeURIComponent(String(obj));\n  }\n};\n\n/**\n * Stringify the given `str`.\n *\n * @param {String} str\n * @param {String} prefix\n * @return {String}\n * @api private\n */\n\nfunction stringifyString(str, prefix) {\n  if (!prefix) throw new TypeError('stringify expects an object');\n  return prefix + '=' + encodeURIComponent(str);\n}\n\n/**\n * Stringify the given `arr`.\n *\n * @param {Array} arr\n * @param {String} prefix\n * @return {String}\n * @api private\n */\n\nfunction stringifyArray(arr, prefix) {\n  var ret = [];\n  if (!prefix) throw new TypeError('stringify expects an object');\n  for (var i = 0; i < arr.length; i++) {\n    ret.push(stringify(arr[i], prefix + '[' + i + ']'));\n  }\n  return ret.join('&');\n}\n\n/**\n * Stringify the given `obj`.\n *\n * @param {Object} obj\n * @param {String} prefix\n * @return {String}\n * @api private\n */\n\nfunction stringifyObject(obj, prefix) {\n  var ret = []\n    , keys = objectKeys(obj)\n    , key;\n\n  for (var i = 0, len = keys.length; i < len; ++i) {\n    key = keys[i];\n    if ('' == key) continue;\n    if (null == obj[key]) {\n      ret.push(encodeURIComponent(key) + '=');\n    } else {\n      ret.push(stringify(obj[key], prefix\n        ? prefix + '[' + encodeURIComponent(key) + ']'\n        : encodeURIComponent(key)));\n    }\n  }\n\n  return ret.join('&');\n}\n\n/**\n * Set `obj`'s `key` to `val` respecting\n * the weird and wonderful syntax of a qs,\n * where \"foo=bar&foo=baz\" becomes an array.\n *\n * @param {Object} obj\n * @param {String} key\n * @param {String} val\n * @api private\n */\n\nfunction set(obj, key, val) {\n  var v = obj[key];\n  if (Object.getOwnPropertyDescriptor(Object.prototype, key)) return;\n  if (undefined === v) {\n    obj[key] = val;\n  } else if (isArray(v)) {\n    v.push(val);\n  } else {\n    obj[key] = [v, val];\n  }\n}\n\n/**\n * Locate last brace in `str` within the key.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction lastBraceInKey(str) {\n  var len = str.length\n    , brace\n    , c;\n  for (var i = 0; i < len; ++i) {\n    c = str[i];\n    if (']' == c) brace = false;\n    if ('[' == c) brace = true;\n    if ('=' == c && !brace) return i;\n  }\n}\n\n/**\n * Decode `str`.\n *\n * @param {String} str\n * @return {String}\n * @api private\n */\n\nfunction decode(str) {\n  try {\n    return decodeURIComponent(str.replace(/\\+/g, ' '));\n  } catch (err) {\n    return str;\n  }\n}\n"]},"metadata":{},"sourceType":"script"}