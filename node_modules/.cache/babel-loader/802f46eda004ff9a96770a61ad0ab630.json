{"ast":null,"code":"var _jsxFileName = \"D:\\\\haya\\\\hosting-.pk\\\\src\\\\Test.js\";\nconst data = [{\n  \"orderId\": 1,\n  \"orderNo\": \"123\",\n  \"orderParts\": [{\n    \"orderPartsId\": 1,\n    \"orderPrtNo\": \"OP-1\",\n    \"regTokens\": [\"Token1\", \"Token2\", \"Token3\"]\n  }]\n}, {\n  \"orderId\": 2,\n  \"orderNo\": \"456\",\n  \"orderParts\": [{\n    \"orderPartsId\": 1,\n    \"orderPrtNo\": \"OP-1\",\n    \"regTokens\": [\"Token1\", \"Token3\"]\n  }]\n}, {\n  \"orderId\": 3,\n  \"orderNo\": \"789\",\n  \"orderParts\": [{\n    \"orderPartsId\": 1,\n    \"orderPrtNo\": \"OP-1\",\n    \"regTokens\": [\"Token1\", \"Token2\", \"Token3\", \"Token4\"]\n  }]\n}];\nconst {\n  Component,\n  Fragment\n} = React;\nconst {\n  Button,\n  Collapse\n} = Reactstrap;\n\nclass Menu extends Component {\n  constructor(props) {\n    super(props);\n\n    this.toggle = idx => () => {\n      this.setState(prevState => ({\n        open: this.state.open.includes(idx) ? prevState.open.filter(x => x !== idx) : [...prevState.open, idx]\n      }));\n    };\n\n    this.state = {\n      open: [...Array(data.length).keys()]\n    };\n  }\n\n  render() {\n    const {\n      open\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 12\n      }\n    }, data.map((levelOneItem, i) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }\n      }, \" Order Id:  \", levelOneItem.orderId, \" \"), levelOneItem.orderParts.map((levelTwoItem, j) => {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 19\n          }\n        }, \" Order Part Id: \", levelTwoItem.orderPartsId, \" \"), /*#__PURE__*/React.createElement(Button, {\n          onClick: this.toggle(i),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 19\n          }\n        }, \"Display Token\"), /*#__PURE__*/React.createElement(Collapse, {\n          isOpen: open.includes(i),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 24\n          }\n        }, levelTwoItem.regTokens.map((levelThreeItem, k) => {\n          return /*#__PURE__*/React.createElement(\"span\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 34\n            }\n          }, \" \", levelThreeItem, \" \");\n        }))));\n      }));\n    }));\n  }\n\n}\n\nexport default test;","map":{"version":3,"sources":["D:/haya/hosting-.pk/src/Test.js"],"names":["data","Component","Fragment","React","Button","Collapse","Reactstrap","Menu","constructor","props","toggle","idx","setState","prevState","open","state","includes","filter","x","Array","length","keys","render","map","levelOneItem","i","orderId","orderParts","levelTwoItem","j","orderPartsId","regTokens","levelThreeItem","k","test"],"mappings":"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","sourcesContent":["const data = [{\"orderId\":1,\"orderNo\":\"123\", \"orderParts\":[{\"orderPartsId\":1,\"orderPrtNo\":\"OP-1\", \"regTokens\":[\"Token1\", \"Token2\",\"Token3\"]}] },\r\n{\"orderId\":2,\"orderNo\":\"456\", \"orderParts\":[{\"orderPartsId\":1,\"orderPrtNo\":\"OP-1\", \"regTokens\":[\"Token1\",\"Token3\"]}] },\r\n{\"orderId\":3,\"orderNo\":\"789\", \"orderParts\":[{\"orderPartsId\":1,\"orderPrtNo\":\"OP-1\", \"regTokens\":[\"Token1\", \"Token2\",\"Token3\", \"Token4\"]}] }\r\n]\r\n\r\nconst {Component, Fragment} = React;\r\nconst {Button, Collapse} = Reactstrap;\r\n\r\nclass Menu extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      open: [...Array(data.length).keys()]\r\n    };\r\n  }\r\n  \r\n  toggle = idx => () => {\r\n    this.setState(prevState => ({open: this.state.open.includes(idx) ? prevState.open.filter(x => x !== idx) : [...prevState.open, idx]})\r\n  )}\r\n  render() {\r\n  const { open } = this.state;\r\n    return <div> \r\n      {\r\n        data.map((levelOneItem, i) => {\r\n          return(\r\n          <div>\r\n          <div> Order Id:  {levelOneItem.orderId} </div>\r\n          {\r\n            levelOneItem.orderParts.map((levelTwoItem, j) => {\r\n               return(\r\n                  <div>\r\n                  <div> Order Part Id: {levelTwoItem.orderPartsId} </div>\r\n                  <Button onClick={this.toggle(i)}>Display Token</Button>\r\n                  <Collapse isOpen={open.includes(i)}>\r\n                    {\r\n                       <div>\r\n                        {levelTwoItem.regTokens.map((levelThreeItem, k) => {\r\n                          return(<span> {levelThreeItem} </span>)\r\n                        })\r\n                     }\r\n                       </div>\r\n                    }\r\n                  </Collapse>\r\n                  </div>\r\n               )\r\n            })\r\n          }\r\n          </div>\r\n          )\r\n        })\r\n      }\r\n    </div>;\r\n  }\r\n\r\n}\r\n \r\nexport default test;"]},"metadata":{},"sourceType":"module"}