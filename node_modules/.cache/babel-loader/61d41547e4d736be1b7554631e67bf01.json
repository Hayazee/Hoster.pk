{"ast":null,"code":"var request = require('request'),\n    template = new (require('url-template'))();\n\nvar apiUrl = 'https://typekit.com/api/v1/json/kits',\n    kitUrl = template.parse(apiUrl + '/{id}'),\n    publishUrl = template.parse(apiUrl + '/{id}/publish');\n\nfunction parseResponse(callback) {\n  return function (err, res, body) {\n    if (err) {\n      callback(err, null);\n    } else if (res.statusCode !== 200 && res.statusCode !== 201) {\n      callback({\n        statusCode: res.statusCode,\n        body: JSON.parse(body.toString())\n      });\n    } else {\n      callback(null, JSON.parse(body.toString()));\n    }\n  };\n}\n\nfunction createHeaders(token) {\n  return {\n    'X-Typekit-Token': token\n  };\n}\n\nfunction create(token, data, callback) {\n  request.post({\n    url: apiUrl,\n    headers: createHeaders(token),\n    form: data\n  }, parseResponse(callback));\n}\n\nfunction update(token, id, data, callback) {\n  request.post({\n    url: kitUrl.expand({\n      id: id\n    }),\n    headers: createHeaders(token),\n    form: data\n  }, parseResponse(callback));\n}\n\nfunction get(token, id, callback) {\n  request.get({\n    url: kitUrl.expand({\n      id: id\n    }),\n    headers: createHeaders(token)\n  }, parseResponse(callback));\n}\n\nfunction list(token, callback) {\n  request.get({\n    url: apiUrl,\n    headers: createHeaders(token)\n  }, parseResponse(callback));\n}\n\nfunction remove(token, id, callback) {\n  request.del({\n    url: kitUrl.expand({\n      id: id\n    }),\n    headers: createHeaders(token)\n  }, parseResponse(callback));\n}\n\nfunction publish(token, id, callback) {\n  request.post({\n    url: publishUrl.expand({\n      id: id\n    }),\n    headers: createHeaders(token)\n  }, parseResponse(callback));\n}\n\nmodule.exports = {\n  create: create,\n  update: update,\n  remove: remove,\n  get: get,\n  list: list,\n  publish: publish\n};","map":{"version":3,"sources":["D:/haya/hosters.pk/node_modules/typekit/lib/index.js"],"names":["request","require","template","apiUrl","kitUrl","parse","publishUrl","parseResponse","callback","err","res","body","statusCode","JSON","toString","createHeaders","token","create","data","post","url","headers","form","update","id","expand","get","list","remove","del","publish","module","exports"],"mappings":"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","sourcesContent":["var request = require('request'),\n    template = new (require('url-template'))();\n\nvar apiUrl = 'https://typekit.com/api/v1/json/kits',\n    kitUrl = template.parse(apiUrl + '/{id}'),\n    publishUrl = template.parse(apiUrl + '/{id}/publish');\n\nfunction parseResponse(callback) {\n  return function (err, res, body) {\n    if (err) {\n      callback(err, null);\n    } else if (res.statusCode !== 200 && res.statusCode !== 201) {\n      callback({\n        statusCode: res.statusCode,\n        body: JSON.parse(body.toString())\n      });\n    } else {\n      callback(null, JSON.parse(body.toString()));\n    }\n  };\n}\n\nfunction createHeaders(token) {\n  return {\n    'X-Typekit-Token': token\n  }\n}\n\nfunction create(token, data, callback) {\n  request.post({\n    url: apiUrl,\n    headers: createHeaders(token),\n    form: data\n  }, parseResponse(callback));\n}\n\nfunction update(token, id, data, callback) {\n  request.post({\n    url: kitUrl.expand({\n      id: id\n    }),\n    headers: createHeaders(token),\n    form: data\n  }, parseResponse(callback));\n}\n\nfunction get(token, id, callback) {\n  request.get({\n    url: kitUrl.expand({\n      id: id\n    }),\n    headers: createHeaders(token)\n  }, parseResponse(callback));\n}\n\nfunction list(token, callback) {\n  request.get({\n    url: apiUrl,\n    headers: createHeaders(token)\n  }, parseResponse(callback));\n}\n\nfunction remove(token, id, callback) {\n  request.del({\n    url: kitUrl.expand({\n      id: id\n    }),\n    headers: createHeaders(token)\n  }, parseResponse(callback));\n}\n\nfunction publish(token, id, callback) {\n  request.post({\n    url: publishUrl.expand({\n      id: id\n    }),\n    headers: createHeaders(token)\n  }, parseResponse(callback));\n}\n\nmodule.exports = {\n  create: create,\n  update: update,\n  remove: remove,\n  get: get,\n  list: list,\n  publish: publish\n};\n"]},"metadata":{},"sourceType":"script"}