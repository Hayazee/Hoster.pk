{"ast":null,"code":"// Load modules\nvar Crypto = require('crypto');\n\nvar Boom = require('boom'); // Declare internals\n\n\nvar internals = {}; // Generate a cryptographically strong pseudo-random data\n\nexports.randomString = function (size) {\n  var buffer = exports.randomBits((size + 1) * 6);\n\n  if (buffer instanceof Error) {\n    return buffer;\n  }\n\n  var string = buffer.toString('base64').replace(/\\+/g, '-').replace(/\\//g, '_').replace(/\\=/g, '');\n  return string.slice(0, size);\n};\n\nexports.randomBits = function (bits) {\n  if (!bits || bits < 0) {\n    return Boom.internal('Invalid random bits count');\n  }\n\n  var bytes = Math.ceil(bits / 8);\n\n  try {\n    return Crypto.randomBytes(bytes);\n  } catch (err) {\n    return Boom.internal('Failed generating random bits: ' + err.message);\n  }\n}; // Compare two strings using fixed time algorithm (to prevent time-based analysis of MAC digest match)\n\n\nexports.fixedTimeComparison = function (a, b) {\n  if (typeof a !== 'string' || typeof b !== 'string') {\n    return false;\n  }\n\n  var mismatch = a.length === b.length ? 0 : 1;\n\n  if (mismatch) {\n    b = a;\n  }\n\n  for (var i = 0, il = a.length; i < il; ++i) {\n    var ac = a.charCodeAt(i);\n    var bc = b.charCodeAt(i);\n    mismatch += ac === bc ? 0 : 1;\n  }\n\n  return mismatch === 0;\n};","map":{"version":3,"sources":["/home/hayaz/haya/haya/hosters.pk/node_modules/whmcs/node_modules/cryptiles/lib/index.js"],"names":["Crypto","require","Boom","internals","exports","randomString","size","buffer","randomBits","Error","string","toString","replace","slice","bits","internal","bytes","Math","ceil","randomBytes","err","message","fixedTimeComparison","a","b","mismatch","length","i","il","ac","charCodeAt","bc"],"mappings":"AAAA;AAEA,IAAIA,MAAM,GAAGC,OAAO,CAAC,QAAD,CAApB;;AACA,IAAIC,IAAI,GAAGD,OAAO,CAAC,MAAD,CAAlB,C,CAGA;;;AAEA,IAAIE,SAAS,GAAG,EAAhB,C,CAGA;;AAEAC,OAAO,CAACC,YAAR,GAAuB,UAAUC,IAAV,EAAgB;AAEnC,MAAIC,MAAM,GAAGH,OAAO,CAACI,UAAR,CAAmB,CAACF,IAAI,GAAG,CAAR,IAAa,CAAhC,CAAb;;AACA,MAAIC,MAAM,YAAYE,KAAtB,EAA6B;AACzB,WAAOF,MAAP;AACH;;AAED,MAAIG,MAAM,GAAGH,MAAM,CAACI,QAAP,CAAgB,QAAhB,EAA0BC,OAA1B,CAAkC,KAAlC,EAAyC,GAAzC,EAA8CA,OAA9C,CAAsD,KAAtD,EAA6D,GAA7D,EAAkEA,OAAlE,CAA0E,KAA1E,EAAiF,EAAjF,CAAb;AACA,SAAOF,MAAM,CAACG,KAAP,CAAa,CAAb,EAAgBP,IAAhB,CAAP;AACH,CATD;;AAYAF,OAAO,CAACI,UAAR,GAAqB,UAAUM,IAAV,EAAgB;AAEjC,MAAI,CAACA,IAAD,IACAA,IAAI,GAAG,CADX,EACc;AAEV,WAAOZ,IAAI,CAACa,QAAL,CAAc,2BAAd,CAAP;AACH;;AAED,MAAIC,KAAK,GAAGC,IAAI,CAACC,IAAL,CAAUJ,IAAI,GAAG,CAAjB,CAAZ;;AACA,MAAI;AACA,WAAOd,MAAM,CAACmB,WAAP,CAAmBH,KAAnB,CAAP;AACH,GAFD,CAGA,OAAOI,GAAP,EAAY;AACR,WAAOlB,IAAI,CAACa,QAAL,CAAc,oCAAoCK,GAAG,CAACC,OAAtD,CAAP;AACH;AACJ,CAfD,C,CAkBA;;;AAEAjB,OAAO,CAACkB,mBAAR,GAA8B,UAAUC,CAAV,EAAaC,CAAb,EAAgB;AAE1C,MAAI,OAAOD,CAAP,KAAa,QAAb,IACA,OAAOC,CAAP,KAAa,QADjB,EAC2B;AAEvB,WAAO,KAAP;AACH;;AAED,MAAIC,QAAQ,GAAIF,CAAC,CAACG,MAAF,KAAaF,CAAC,CAACE,MAAf,GAAwB,CAAxB,GAA4B,CAA5C;;AACA,MAAID,QAAJ,EAAc;AACVD,IAAAA,CAAC,GAAGD,CAAJ;AACH;;AAED,OAAK,IAAII,CAAC,GAAG,CAAR,EAAWC,EAAE,GAAGL,CAAC,CAACG,MAAvB,EAA+BC,CAAC,GAAGC,EAAnC,EAAuC,EAAED,CAAzC,EAA4C;AACxC,QAAIE,EAAE,GAAGN,CAAC,CAACO,UAAF,CAAaH,CAAb,CAAT;AACA,QAAII,EAAE,GAAGP,CAAC,CAACM,UAAF,CAAaH,CAAb,CAAT;AACAF,IAAAA,QAAQ,IAAKI,EAAE,KAAKE,EAAP,GAAY,CAAZ,GAAgB,CAA7B;AACH;;AAED,SAAQN,QAAQ,KAAK,CAArB;AACH,CApBD","sourcesContent":["// Load modules\n\nvar Crypto = require('crypto');\nvar Boom = require('boom');\n\n\n// Declare internals\n\nvar internals = {};\n\n\n// Generate a cryptographically strong pseudo-random data\n\nexports.randomString = function (size) {\n\n    var buffer = exports.randomBits((size + 1) * 6);\n    if (buffer instanceof Error) {\n        return buffer;\n    }\n\n    var string = buffer.toString('base64').replace(/\\+/g, '-').replace(/\\//g, '_').replace(/\\=/g, '');\n    return string.slice(0, size);\n};\n\n\nexports.randomBits = function (bits) {\n\n    if (!bits ||\n        bits < 0) {\n\n        return Boom.internal('Invalid random bits count');\n    }\n\n    var bytes = Math.ceil(bits / 8);\n    try {\n        return Crypto.randomBytes(bytes);\n    }\n    catch (err) {\n        return Boom.internal('Failed generating random bits: ' + err.message);\n    }\n};\n\n\n// Compare two strings using fixed time algorithm (to prevent time-based analysis of MAC digest match)\n\nexports.fixedTimeComparison = function (a, b) {\n\n    if (typeof a !== 'string' ||\n        typeof b !== 'string') {\n\n        return false;\n    }\n\n    var mismatch = (a.length === b.length ? 0 : 1);\n    if (mismatch) {\n        b = a;\n    }\n\n    for (var i = 0, il = a.length; i < il; ++i) {\n        var ac = a.charCodeAt(i);\n        var bc = b.charCodeAt(i);\n        mismatch += (ac === bc ? 0 : 1);\n    }\n\n    return (mismatch === 0);\n};\n\n\n"]},"metadata":{},"sourceType":"script"}