{"ast":null,"code":"var request = require('request');\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar xml2js = require('xml2js');\n\nmodule.exports = {\n  /**\n   * Effectuate HTTP request\n   * @param options Object\n   * @param callback Function\n   * @param [isLicense] Boolean\n   */\n  modem: function (options, callback, isLicense) {\n    var requestBody, client;\n    client = options.client;\n    requestBody = options.body;\n\n    if (!requestBody.responsetype) {\n      requestBody.responsetype = 'json';\n    }\n\n    if (isLicense === true) {\n      requestBody.email = client.config.username;\n      requestBody.apikey = client.config.apiKey;\n    } else {\n      requestBody.username = client.config.username;\n      requestBody.password = client.config.password;\n\n      if (client.config.apiKey) {\n        requestBody.accesskey = client.config.apiKey;\n      }\n    }\n\n    var serverOptions = {\n      uri: client.config.serverUrl,\n      method: 'POST',\n      headers: {}\n    };\n\n    if (typeof client.config.userAgent !== 'undefined') {\n      serverOptions.headers['User-Agent'] = client.config.userAgent;\n    }\n\n    serverOptions.headers['Content-Type'] = 'application/x-www-form-urlencoded';\n    serverOptions.body = require('querystring').stringify(requestBody);\n\n    function send(statusCode, data, callback) {\n      if (!data || !data.result || data.result.toLowerCase() != 'success') {\n        return callback(new Error('WHMCS Error (' + statusCode + '): ' + data.message));\n      } else {\n        return callback(null, data);\n      }\n    }\n\n    request(serverOptions, function (err, res, body) {\n      if (err) {\n        return callback(err);\n      }\n\n      var statusCode = res.statusCode.toString();\n      var data;\n\n      if (requestBody.responsetype === 'xml') {\n        xml2js.parseString(body, {\n          'explicitArray': false\n        }, function (err, result) {\n          if (err) return callback(new Error('error parsing xml'));\n          send(statusCode, result.licenseapi, callback);\n        });\n      } else {\n        try {\n          data = JSON.parse(body);\n        } catch (e) {\n          return callback(new Error('JSON failed to parse: ' + e + ' -> \"' + body + '\"'));\n        }\n\n        send(statusCode, data, callback);\n      }\n    });\n  },\n\n  /**\n   * Pass in `arguments` to get back a proper Array\n   * @returns {Array.<T>}\n   */\n  getArgs: function (args) {\n    return Array.prototype.slice.call(args);\n  },\n\n  /**\n   * Extend properties of one object with one or more Objects\n   * Copied from Underscore - http://underscorejs.org/\n   * @param obj Object\n   * @returns Object\n   */\n  extend: function (obj) {\n    if (typeof obj !== 'object') return obj;\n    var source, prop;\n\n    for (var i = 1, length = arguments.length; i < length; i++) {\n      source = arguments[i];\n\n      for (prop in source) {\n        if (hasOwnProperty.call(source, prop)) {\n          obj[prop] = source[prop];\n        }\n      }\n    }\n\n    return obj;\n  }\n};","map":{"version":3,"sources":["/home/hayaz/haya/haya/hosters.pk/node_modules/whmcs/lib/utils.js"],"names":["request","require","hasOwnProperty","Object","prototype","xml2js","module","exports","modem","options","callback","isLicense","requestBody","client","body","responsetype","email","config","username","apikey","apiKey","password","accesskey","serverOptions","uri","serverUrl","method","headers","userAgent","stringify","send","statusCode","data","result","toLowerCase","Error","message","err","res","toString","parseString","licenseapi","JSON","parse","e","getArgs","args","Array","slice","call","extend","obj","source","prop","i","length","arguments"],"mappings":"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","sourcesContent":["var request = require('request');\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar xml2js = require('xml2js');\n\nmodule.exports = {\n  /**\n   * Effectuate HTTP request\n   * @param options Object\n   * @param callback Function\n   * @param [isLicense] Boolean\n   */\n  modem: function(options, callback, isLicense) {\n    var requestBody, client;\n\n    client = options.client;\n    requestBody = options.body;\n\n    if (!requestBody.responsetype) {\n      requestBody.responsetype = 'json';\n    }\n\n    if (isLicense === true) {\n      requestBody.email = client.config.username;\n      requestBody.apikey = client.config.apiKey;\n    } else {\n      requestBody.username = client.config.username;\n      requestBody.password = client.config.password;\n\n      if (client.config.apiKey) {\n        requestBody.accesskey = client.config.apiKey;\n      }\n    }\n\n    var serverOptions = {\n      uri: client.config.serverUrl,\n      method: 'POST',\n      headers: {}\n    };\n\n    if (typeof client.config.userAgent !== 'undefined') {\n      serverOptions.headers['User-Agent'] = client.config.userAgent;\n    }\n\n    serverOptions.headers['Content-Type'] = 'application/x-www-form-urlencoded';\n    serverOptions.body = require('querystring').stringify(requestBody);\n\n\n    function send(statusCode, data, callback) {\n      if(!data || !data.result || data.result.toLowerCase() != 'success') {\n        return callback(new Error('WHMCS Error (' + statusCode + '): ' + data.message));\n      } else {\n        return callback(null, data);\n      }\n    }\n\n    request(serverOptions, function(err, res, body) {\n      if (err) {\n        return callback(err);\n      }\n\n      var statusCode = res.statusCode.toString();\n\n      var data;\n\n      if (requestBody.responsetype === 'xml') {\n        xml2js.parseString(body, {\n          'explicitArray': false\n        }, function(err, result) {\n\n          if (err) return callback(new Error('error parsing xml'));\n          send(statusCode, result.licenseapi, callback);\n        });\n      } else {\n        try {\n          data = JSON.parse(body);\n        } catch (e) {\n          return callback(new Error('JSON failed to parse: ' + e + ' -> \"' + body + '\"'));\n        }\n        send(statusCode, data, callback);\n      }\n    });\n  },\n\n  /**\n   * Pass in `arguments` to get back a proper Array\n   * @returns {Array.<T>}\n   */\n  getArgs: function(args) {\n    return Array.prototype.slice.call(args);\n  },\n\n  /**\n   * Extend properties of one object with one or more Objects\n   * Copied from Underscore - http://underscorejs.org/\n   * @param obj Object\n   * @returns Object\n   */\n  extend: function(obj) {\n    if (typeof obj !== 'object') return obj;\n    var source, prop;\n    for (var i = 1, length = arguments.length; i < length; i++) {\n      source = arguments[i];\n      for (prop in source) {\n        if (hasOwnProperty.call(source, prop)) {\n            obj[prop] = source[prop];\n        }\n      }\n    }\n    return obj;\n  }\n};\n"]},"metadata":{},"sourceType":"script"}