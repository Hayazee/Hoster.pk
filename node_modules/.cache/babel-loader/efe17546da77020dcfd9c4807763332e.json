{"ast":null,"code":"// Load modules\nvar Url = require('url');\n\nvar Hoek = require('hoek');\n\nvar Cryptiles = require('cryptiles');\n\nvar Crypto = require('./crypto');\n\nvar Utils = require('./utils'); // Declare internals\n\n\nvar internals = {}; // Generate an Authorization header for a given request\n\n/*\r\n    uri: 'http://example.com/resource?a=b' or object from Url.parse()\r\n    method: HTTP verb (e.g. 'GET', 'POST')\r\n    options: {\r\n\r\n        // Required\r\n\r\n        credentials: {\r\n            id: 'dh37fgj492je',\r\n            key: 'aoijedoaijsdlaksjdl',\r\n            algorithm: 'sha256'                                 // 'sha1', 'sha256'\r\n        },\r\n\r\n        // Optional\r\n\r\n        ext: 'application-specific',                        // Application specific data sent via the ext attribute\r\n        timestamp: Date.now(),                              // A pre-calculated timestamp\r\n        nonce: '2334f34f',                                  // A pre-generated nonce\r\n        localtimeOffsetMsec: 400,                           // Time offset to sync with server time (ignored if timestamp provided)\r\n        payload: '{\"some\":\"payload\"}',                      // UTF-8 encoded string for body hash generation (ignored if hash provided)\r\n        contentType: 'application/json',                    // Payload content-type (ignored if hash provided)\r\n        hash: 'U4MKKSmiVxk37JCCrAVIjV=',                    // Pre-calculated payload hash\r\n        app: '24s23423f34dx',                               // Oz application id\r\n        dlg: '234sz34tww3sd'                                // Oz delegated-by application id\r\n    }\r\n*/\n\nexports.header = function (uri, method, options) {\n  var result = {\n    field: '',\n    artifacts: {}\n  }; // Validate inputs\n\n  if (!uri || typeof uri !== 'string' && typeof uri !== 'object' || !method || typeof method !== 'string' || !options || typeof options !== 'object') {\n    return result;\n  } // Application time\n\n\n  var timestamp = options.timestamp || Math.floor((Utils.now() + (options.localtimeOffsetMsec || 0)) / 1000); // Validate credentials\n\n  var credentials = options.credentials;\n\n  if (!credentials || !credentials.id || !credentials.key || !credentials.algorithm) {\n    // Invalid credential object\n    return result;\n  }\n\n  if (Crypto.algorithms.indexOf(credentials.algorithm) === -1) {\n    return result;\n  } // Parse URI\n\n\n  if (typeof uri === 'string') {\n    uri = Url.parse(uri);\n  } // Calculate signature\n\n\n  var artifacts = {\n    ts: timestamp,\n    nonce: options.nonce || Cryptiles.randomString(6),\n    method: method,\n    resource: uri.pathname + (uri.search || ''),\n    // Maintain trailing '?'\n    host: uri.hostname,\n    port: uri.port || (uri.protocol === 'http:' ? 80 : 443),\n    hash: options.hash,\n    ext: options.ext,\n    app: options.app,\n    dlg: options.dlg\n  };\n  result.artifacts = artifacts; // Calculate payload hash\n\n  if (!artifacts.hash && options.hasOwnProperty('payload')) {\n    artifacts.hash = Crypto.calculatePayloadHash(options.payload, credentials.algorithm, options.contentType);\n  }\n\n  var mac = Crypto.calculateMac('header', credentials, artifacts); // Construct header\n\n  var hasExt = artifacts.ext !== null && artifacts.ext !== undefined && artifacts.ext !== ''; // Other falsey values allowed\n\n  var header = 'Hawk id=\"' + credentials.id + '\", ts=\"' + artifacts.ts + '\", nonce=\"' + artifacts.nonce + (artifacts.hash ? '\", hash=\"' + artifacts.hash : '') + (hasExt ? '\", ext=\"' + Utils.escapeHeaderAttribute(artifacts.ext) : '') + '\", mac=\"' + mac + '\"';\n\n  if (artifacts.app) {\n    header += ', app=\"' + artifacts.app + (artifacts.dlg ? '\", dlg=\"' + artifacts.dlg : '') + '\"';\n  }\n\n  result.field = header;\n  return result;\n}; // Validate server response\n\n/*\r\n    res:        node's response object\r\n    artifacts:  object recieved from header().artifacts\r\n    options: {\r\n        payload:    optional payload received\r\n        required:   specifies if a Server-Authorization header is required. Defaults to 'false'\r\n    }\r\n*/\n\n\nexports.authenticate = function (res, credentials, artifacts, options) {\n  artifacts = Hoek.clone(artifacts);\n  options = options || {};\n\n  if (res.headers['www-authenticate']) {\n    // Parse HTTP WWW-Authenticate header\n    var attributes = Utils.parseAuthorizationHeader(res.headers['www-authenticate'], ['ts', 'tsm', 'error']);\n\n    if (attributes instanceof Error) {\n      return false;\n    }\n\n    if (attributes.ts) {\n      var tsm = Crypto.calculateTsMac(attributes.ts, credentials);\n\n      if (tsm !== attributes.tsm) {\n        return false;\n      }\n    }\n  } // Parse HTTP Server-Authorization header\n\n\n  if (!res.headers['server-authorization'] && !options.required) {\n    return true;\n  }\n\n  var attributes = Utils.parseAuthorizationHeader(res.headers['server-authorization'], ['mac', 'ext', 'hash']);\n\n  if (attributes instanceof Error) {\n    return false;\n  }\n\n  artifacts.ext = attributes.ext;\n  artifacts.hash = attributes.hash;\n  var mac = Crypto.calculateMac('response', credentials, artifacts);\n\n  if (mac !== attributes.mac) {\n    return false;\n  }\n\n  if (!options.hasOwnProperty('payload')) {\n    return true;\n  }\n\n  if (!attributes.hash) {\n    return false;\n  }\n\n  var calculatedHash = Crypto.calculatePayloadHash(options.payload, credentials.algorithm, res.headers['content-type']);\n  return calculatedHash === attributes.hash;\n}; // Generate a bewit value for a given URI\n\n/*\r\n * credentials is an object with the following keys: 'id, 'key', 'algorithm'.\r\n * options is an object with the following optional keys: 'ext', 'localtimeOffsetMsec'\r\n */\n\n/*\r\n    uri: 'http://example.com/resource?a=b' or object from Url.parse()\r\n    options: {\r\n\r\n        // Required\r\n\r\n        credentials: {\r\n            id: 'dh37fgj492je',\r\n            key: 'aoijedoaijsdlaksjdl',\r\n            algorithm: 'sha256'                             // 'sha1', 'sha256'\r\n        },\r\n        ttlSec: 60 * 60,                                    // TTL in seconds\r\n\r\n        // Optional\r\n\r\n        ext: 'application-specific',                        // Application specific data sent via the ext attribute\r\n        localtimeOffsetMsec: 400                            // Time offset to sync with server time\r\n    };\r\n*/\n\n\nexports.getBewit = function (uri, options) {\n  // Validate inputs\n  if (!uri || typeof uri !== 'string' && typeof uri !== 'object' || !options || typeof options !== 'object' || !options.ttlSec) {\n    return '';\n  }\n\n  options.ext = options.ext === null || options.ext === undefined ? '' : options.ext; // Zero is valid value\n  // Application time\n\n  var now = Utils.now() + (options.localtimeOffsetMsec || 0); // Validate credentials\n\n  var credentials = options.credentials;\n\n  if (!credentials || !credentials.id || !credentials.key || !credentials.algorithm) {\n    return '';\n  }\n\n  if (Crypto.algorithms.indexOf(credentials.algorithm) === -1) {\n    return '';\n  } // Parse URI\n\n\n  if (typeof uri === 'string') {\n    uri = Url.parse(uri);\n  } // Calculate signature\n\n\n  var exp = Math.floor(now / 1000) + options.ttlSec;\n  var mac = Crypto.calculateMac('bewit', credentials, {\n    ts: exp,\n    nonce: '',\n    method: 'GET',\n    resource: uri.pathname + (uri.search || ''),\n    // Maintain trailing '?'\n    host: uri.hostname,\n    port: uri.port || (uri.protocol === 'http:' ? 80 : 443),\n    ext: options.ext\n  }); // Construct bewit: id\\exp\\mac\\ext\n\n  var bewit = credentials.id + '\\\\' + exp + '\\\\' + mac + '\\\\' + options.ext;\n  return Utils.base64urlEncode(bewit);\n};","map":{"version":3,"sources":["/home/hayaz/haya/haya/hosters.pk/node_modules/whmcs/node_modules/hawk/lib/client.js"],"names":["Url","require","Hoek","Cryptiles","Crypto","Utils","internals","exports","header","uri","method","options","result","field","artifacts","timestamp","Math","floor","now","localtimeOffsetMsec","credentials","id","key","algorithm","algorithms","indexOf","parse","ts","nonce","randomString","resource","pathname","search","host","hostname","port","protocol","hash","ext","app","dlg","hasOwnProperty","calculatePayloadHash","payload","contentType","mac","calculateMac","hasExt","undefined","escapeHeaderAttribute","authenticate","res","clone","headers","attributes","parseAuthorizationHeader","Error","tsm","calculateTsMac","required","calculatedHash","getBewit","ttlSec","exp","bewit","base64urlEncode"],"mappings":"AAAA;AAEA,IAAIA,GAAG,GAAGC,OAAO,CAAC,KAAD,CAAjB;;AACA,IAAIC,IAAI,GAAGD,OAAO,CAAC,MAAD,CAAlB;;AACA,IAAIE,SAAS,GAAGF,OAAO,CAAC,WAAD,CAAvB;;AACA,IAAIG,MAAM,GAAGH,OAAO,CAAC,UAAD,CAApB;;AACA,IAAII,KAAK,GAAGJ,OAAO,CAAC,SAAD,CAAnB,C,CAGA;;;AAEA,IAAIK,SAAS,GAAG,EAAhB,C,CAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAC,OAAO,CAACC,MAAR,GAAiB,UAAUC,GAAV,EAAeC,MAAf,EAAuBC,OAAvB,EAAgC;AAE7C,MAAIC,MAAM,GAAG;AACTC,IAAAA,KAAK,EAAE,EADE;AAETC,IAAAA,SAAS,EAAE;AAFF,GAAb,CAF6C,CAO7C;;AAEA,MAAI,CAACL,GAAD,IAAS,OAAOA,GAAP,KAAe,QAAf,IAA2B,OAAOA,GAAP,KAAe,QAAnD,IACA,CAACC,MADD,IACW,OAAOA,MAAP,KAAkB,QAD7B,IAEA,CAACC,OAFD,IAEY,OAAOA,OAAP,KAAmB,QAFnC,EAE6C;AAEzC,WAAOC,MAAP;AACH,GAd4C,CAgB7C;;;AAEA,MAAIG,SAAS,GAAGJ,OAAO,CAACI,SAAR,IAAqBC,IAAI,CAACC,KAAL,CAAW,CAACZ,KAAK,CAACa,GAAN,MAAeP,OAAO,CAACQ,mBAAR,IAA+B,CAA9C,CAAD,IAAqD,IAAhE,CAArC,CAlB6C,CAoB7C;;AAEA,MAAIC,WAAW,GAAGT,OAAO,CAACS,WAA1B;;AACA,MAAI,CAACA,WAAD,IACA,CAACA,WAAW,CAACC,EADb,IAEA,CAACD,WAAW,CAACE,GAFb,IAGA,CAACF,WAAW,CAACG,SAHjB,EAG4B;AAExB;AACA,WAAOX,MAAP;AACH;;AAED,MAAIR,MAAM,CAACoB,UAAP,CAAkBC,OAAlB,CAA0BL,WAAW,CAACG,SAAtC,MAAqD,CAAC,CAA1D,EAA6D;AACzD,WAAOX,MAAP;AACH,GAlC4C,CAoC7C;;;AAEA,MAAI,OAAOH,GAAP,KAAe,QAAnB,EAA6B;AACzBA,IAAAA,GAAG,GAAGT,GAAG,CAAC0B,KAAJ,CAAUjB,GAAV,CAAN;AACH,GAxC4C,CA0C7C;;;AAEA,MAAIK,SAAS,GAAG;AACZa,IAAAA,EAAE,EAAEZ,SADQ;AAEZa,IAAAA,KAAK,EAAEjB,OAAO,CAACiB,KAAR,IAAiBzB,SAAS,CAAC0B,YAAV,CAAuB,CAAvB,CAFZ;AAGZnB,IAAAA,MAAM,EAAEA,MAHI;AAIZoB,IAAAA,QAAQ,EAAErB,GAAG,CAACsB,QAAJ,IAAgBtB,GAAG,CAACuB,MAAJ,IAAc,EAA9B,CAJE;AAI4D;AACxEC,IAAAA,IAAI,EAAExB,GAAG,CAACyB,QALE;AAMZC,IAAAA,IAAI,EAAE1B,GAAG,CAAC0B,IAAJ,KAAa1B,GAAG,CAAC2B,QAAJ,KAAiB,OAAjB,GAA2B,EAA3B,GAAgC,GAA7C,CANM;AAOZC,IAAAA,IAAI,EAAE1B,OAAO,CAAC0B,IAPF;AAQZC,IAAAA,GAAG,EAAE3B,OAAO,CAAC2B,GARD;AASZC,IAAAA,GAAG,EAAE5B,OAAO,CAAC4B,GATD;AAUZC,IAAAA,GAAG,EAAE7B,OAAO,CAAC6B;AAVD,GAAhB;AAaA5B,EAAAA,MAAM,CAACE,SAAP,GAAmBA,SAAnB,CAzD6C,CA2D7C;;AAEA,MAAI,CAACA,SAAS,CAACuB,IAAX,IACA1B,OAAO,CAAC8B,cAAR,CAAuB,SAAvB,CADJ,EACuC;AAEnC3B,IAAAA,SAAS,CAACuB,IAAV,GAAiBjC,MAAM,CAACsC,oBAAP,CAA4B/B,OAAO,CAACgC,OAApC,EAA6CvB,WAAW,CAACG,SAAzD,EAAoEZ,OAAO,CAACiC,WAA5E,CAAjB;AACH;;AAED,MAAIC,GAAG,GAAGzC,MAAM,CAAC0C,YAAP,CAAoB,QAApB,EAA8B1B,WAA9B,EAA2CN,SAA3C,CAAV,CAnE6C,CAqE7C;;AAEA,MAAIiC,MAAM,GAAGjC,SAAS,CAACwB,GAAV,KAAkB,IAAlB,IAA0BxB,SAAS,CAACwB,GAAV,KAAkBU,SAA5C,IAAyDlC,SAAS,CAACwB,GAAV,KAAkB,EAAxF,CAvE6C,CAuEqD;;AAClG,MAAI9B,MAAM,GAAG,cAAcY,WAAW,CAACC,EAA1B,GACA,SADA,GACYP,SAAS,CAACa,EADtB,GAEA,YAFA,GAEeb,SAAS,CAACc,KAFzB,IAGCd,SAAS,CAACuB,IAAV,GAAiB,cAAcvB,SAAS,CAACuB,IAAzC,GAAgD,EAHjD,KAICU,MAAM,GAAG,aAAa1C,KAAK,CAAC4C,qBAAN,CAA4BnC,SAAS,CAACwB,GAAtC,CAAhB,GAA6D,EAJpE,IAKA,UALA,GAKaO,GALb,GAKmB,GALhC;;AAOA,MAAI/B,SAAS,CAACyB,GAAd,EAAmB;AACf/B,IAAAA,MAAM,IAAI,YAAYM,SAAS,CAACyB,GAAtB,IACCzB,SAAS,CAAC0B,GAAV,GAAgB,aAAa1B,SAAS,CAAC0B,GAAvC,GAA6C,EAD9C,IACoD,GAD9D;AAEH;;AAED5B,EAAAA,MAAM,CAACC,KAAP,GAAeL,MAAf;AAEA,SAAOI,MAAP;AACH,CAvFD,C,CA0FA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAL,OAAO,CAAC2C,YAAR,GAAuB,UAAUC,GAAV,EAAe/B,WAAf,EAA4BN,SAA5B,EAAuCH,OAAvC,EAAgD;AAEnEG,EAAAA,SAAS,GAAGZ,IAAI,CAACkD,KAAL,CAAWtC,SAAX,CAAZ;AACAH,EAAAA,OAAO,GAAGA,OAAO,IAAI,EAArB;;AAEA,MAAIwC,GAAG,CAACE,OAAJ,CAAY,kBAAZ,CAAJ,EAAqC;AAEjC;AAEA,QAAIC,UAAU,GAAGjD,KAAK,CAACkD,wBAAN,CAA+BJ,GAAG,CAACE,OAAJ,CAAY,kBAAZ,CAA/B,EAAgE,CAAC,IAAD,EAAO,KAAP,EAAc,OAAd,CAAhE,CAAjB;;AACA,QAAIC,UAAU,YAAYE,KAA1B,EAAiC;AAC7B,aAAO,KAAP;AACH;;AAED,QAAIF,UAAU,CAAC3B,EAAf,EAAmB;AACf,UAAI8B,GAAG,GAAGrD,MAAM,CAACsD,cAAP,CAAsBJ,UAAU,CAAC3B,EAAjC,EAAqCP,WAArC,CAAV;;AACA,UAAIqC,GAAG,KAAKH,UAAU,CAACG,GAAvB,EAA4B;AACxB,eAAO,KAAP;AACH;AACJ;AACJ,GApBkE,CAsBnE;;;AAEA,MAAI,CAACN,GAAG,CAACE,OAAJ,CAAY,sBAAZ,CAAD,IACA,CAAC1C,OAAO,CAACgD,QADb,EACuB;AAEnB,WAAO,IAAP;AACH;;AAED,MAAIL,UAAU,GAAGjD,KAAK,CAACkD,wBAAN,CAA+BJ,GAAG,CAACE,OAAJ,CAAY,sBAAZ,CAA/B,EAAoE,CAAC,KAAD,EAAQ,KAAR,EAAe,MAAf,CAApE,CAAjB;;AACA,MAAIC,UAAU,YAAYE,KAA1B,EAAiC;AAC7B,WAAO,KAAP;AACH;;AAED1C,EAAAA,SAAS,CAACwB,GAAV,GAAgBgB,UAAU,CAAChB,GAA3B;AACAxB,EAAAA,SAAS,CAACuB,IAAV,GAAiBiB,UAAU,CAACjB,IAA5B;AAEA,MAAIQ,GAAG,GAAGzC,MAAM,CAAC0C,YAAP,CAAoB,UAApB,EAAgC1B,WAAhC,EAA6CN,SAA7C,CAAV;;AACA,MAAI+B,GAAG,KAAKS,UAAU,CAACT,GAAvB,EAA4B;AACxB,WAAO,KAAP;AACH;;AAED,MAAI,CAAClC,OAAO,CAAC8B,cAAR,CAAuB,SAAvB,CAAL,EAAwC;AACpC,WAAO,IAAP;AACH;;AAED,MAAI,CAACa,UAAU,CAACjB,IAAhB,EAAsB;AAClB,WAAO,KAAP;AACH;;AAED,MAAIuB,cAAc,GAAGxD,MAAM,CAACsC,oBAAP,CAA4B/B,OAAO,CAACgC,OAApC,EAA6CvB,WAAW,CAACG,SAAzD,EAAoE4B,GAAG,CAACE,OAAJ,CAAY,cAAZ,CAApE,CAArB;AACA,SAAQO,cAAc,KAAKN,UAAU,CAACjB,IAAtC;AACH,CArDD,C,CAwDA;;AAEA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA9B,OAAO,CAACsD,QAAR,GAAmB,UAAUpD,GAAV,EAAeE,OAAf,EAAwB;AAEvC;AAEA,MAAI,CAACF,GAAD,IACC,OAAOA,GAAP,KAAe,QAAf,IAA2B,OAAOA,GAAP,KAAe,QAD3C,IAEA,CAACE,OAFD,IAGA,OAAOA,OAAP,KAAmB,QAHnB,IAIA,CAACA,OAAO,CAACmD,MAJb,EAIqB;AAEjB,WAAO,EAAP;AACH;;AAEDnD,EAAAA,OAAO,CAAC2B,GAAR,GAAe3B,OAAO,CAAC2B,GAAR,KAAgB,IAAhB,IAAwB3B,OAAO,CAAC2B,GAAR,KAAgBU,SAAxC,GAAoD,EAApD,GAAyDrC,OAAO,CAAC2B,GAAhF,CAbuC,CAaqD;AAE5F;;AAEA,MAAIpB,GAAG,GAAGb,KAAK,CAACa,GAAN,MAAeP,OAAO,CAACQ,mBAAR,IAA+B,CAA9C,CAAV,CAjBuC,CAmBvC;;AAEA,MAAIC,WAAW,GAAGT,OAAO,CAACS,WAA1B;;AACA,MAAI,CAACA,WAAD,IACA,CAACA,WAAW,CAACC,EADb,IAEA,CAACD,WAAW,CAACE,GAFb,IAGA,CAACF,WAAW,CAACG,SAHjB,EAG4B;AAExB,WAAO,EAAP;AACH;;AAED,MAAInB,MAAM,CAACoB,UAAP,CAAkBC,OAAlB,CAA0BL,WAAW,CAACG,SAAtC,MAAqD,CAAC,CAA1D,EAA6D;AACzD,WAAO,EAAP;AACH,GAhCsC,CAkCvC;;;AAEA,MAAI,OAAOd,GAAP,KAAe,QAAnB,EAA6B;AACzBA,IAAAA,GAAG,GAAGT,GAAG,CAAC0B,KAAJ,CAAUjB,GAAV,CAAN;AACH,GAtCsC,CAwCvC;;;AAEA,MAAIsD,GAAG,GAAG/C,IAAI,CAACC,KAAL,CAAWC,GAAG,GAAG,IAAjB,IAAyBP,OAAO,CAACmD,MAA3C;AACA,MAAIjB,GAAG,GAAGzC,MAAM,CAAC0C,YAAP,CAAoB,OAApB,EAA6B1B,WAA7B,EAA0C;AAChDO,IAAAA,EAAE,EAAEoC,GAD4C;AAEhDnC,IAAAA,KAAK,EAAE,EAFyC;AAGhDlB,IAAAA,MAAM,EAAE,KAHwC;AAIhDoB,IAAAA,QAAQ,EAAErB,GAAG,CAACsB,QAAJ,IAAgBtB,GAAG,CAACuB,MAAJ,IAAc,EAA9B,CAJsC;AAIwB;AACxEC,IAAAA,IAAI,EAAExB,GAAG,CAACyB,QALsC;AAMhDC,IAAAA,IAAI,EAAE1B,GAAG,CAAC0B,IAAJ,KAAa1B,GAAG,CAAC2B,QAAJ,KAAiB,OAAjB,GAA2B,EAA3B,GAAgC,GAA7C,CAN0C;AAOhDE,IAAAA,GAAG,EAAE3B,OAAO,CAAC2B;AAPmC,GAA1C,CAAV,CA3CuC,CAqDvC;;AAEA,MAAI0B,KAAK,GAAG5C,WAAW,CAACC,EAAZ,GAAiB,IAAjB,GAAwB0C,GAAxB,GAA8B,IAA9B,GAAqClB,GAArC,GAA2C,IAA3C,GAAkDlC,OAAO,CAAC2B,GAAtE;AACA,SAAOjC,KAAK,CAAC4D,eAAN,CAAsBD,KAAtB,CAAP;AACH,CAzDD","sourcesContent":["// Load modules\r\n\r\nvar Url = require('url');\r\nvar Hoek = require('hoek');\r\nvar Cryptiles = require('cryptiles');\r\nvar Crypto = require('./crypto');\r\nvar Utils = require('./utils');\r\n\r\n\r\n// Declare internals\r\n\r\nvar internals = {};\r\n\r\n\r\n// Generate an Authorization header for a given request\r\n\r\n/*\r\n    uri: 'http://example.com/resource?a=b' or object from Url.parse()\r\n    method: HTTP verb (e.g. 'GET', 'POST')\r\n    options: {\r\n\r\n        // Required\r\n\r\n        credentials: {\r\n            id: 'dh37fgj492je',\r\n            key: 'aoijedoaijsdlaksjdl',\r\n            algorithm: 'sha256'                                 // 'sha1', 'sha256'\r\n        },\r\n\r\n        // Optional\r\n\r\n        ext: 'application-specific',                        // Application specific data sent via the ext attribute\r\n        timestamp: Date.now(),                              // A pre-calculated timestamp\r\n        nonce: '2334f34f',                                  // A pre-generated nonce\r\n        localtimeOffsetMsec: 400,                           // Time offset to sync with server time (ignored if timestamp provided)\r\n        payload: '{\"some\":\"payload\"}',                      // UTF-8 encoded string for body hash generation (ignored if hash provided)\r\n        contentType: 'application/json',                    // Payload content-type (ignored if hash provided)\r\n        hash: 'U4MKKSmiVxk37JCCrAVIjV=',                    // Pre-calculated payload hash\r\n        app: '24s23423f34dx',                               // Oz application id\r\n        dlg: '234sz34tww3sd'                                // Oz delegated-by application id\r\n    }\r\n*/\r\n\r\nexports.header = function (uri, method, options) {\r\n\r\n    var result = {\r\n        field: '',\r\n        artifacts: {}\r\n    };\r\n\r\n    // Validate inputs\r\n\r\n    if (!uri || (typeof uri !== 'string' && typeof uri !== 'object') ||\r\n        !method || typeof method !== 'string' ||\r\n        !options || typeof options !== 'object') {\r\n\r\n        return result;\r\n    }\r\n\r\n    // Application time\r\n\r\n    var timestamp = options.timestamp || Math.floor((Utils.now() + (options.localtimeOffsetMsec || 0)) / 1000)\r\n\r\n    // Validate credentials\r\n\r\n    var credentials = options.credentials;\r\n    if (!credentials ||\r\n        !credentials.id ||\r\n        !credentials.key ||\r\n        !credentials.algorithm) {\r\n\r\n        // Invalid credential object\r\n        return result;\r\n    }\r\n\r\n    if (Crypto.algorithms.indexOf(credentials.algorithm) === -1) {\r\n        return result;\r\n    }\r\n\r\n    // Parse URI\r\n\r\n    if (typeof uri === 'string') {\r\n        uri = Url.parse(uri);\r\n    }\r\n\r\n    // Calculate signature\r\n\r\n    var artifacts = {\r\n        ts: timestamp,\r\n        nonce: options.nonce || Cryptiles.randomString(6),\r\n        method: method,\r\n        resource: uri.pathname + (uri.search || ''),                            // Maintain trailing '?'\r\n        host: uri.hostname,\r\n        port: uri.port || (uri.protocol === 'http:' ? 80 : 443),\r\n        hash: options.hash,\r\n        ext: options.ext,\r\n        app: options.app,\r\n        dlg: options.dlg\r\n    };\r\n\r\n    result.artifacts = artifacts;\r\n\r\n    // Calculate payload hash\r\n\r\n    if (!artifacts.hash &&\r\n        options.hasOwnProperty('payload')) {\r\n\r\n        artifacts.hash = Crypto.calculatePayloadHash(options.payload, credentials.algorithm, options.contentType);\r\n    }\r\n\r\n    var mac = Crypto.calculateMac('header', credentials, artifacts);\r\n\r\n    // Construct header\r\n\r\n    var hasExt = artifacts.ext !== null && artifacts.ext !== undefined && artifacts.ext !== '';       // Other falsey values allowed\r\n    var header = 'Hawk id=\"' + credentials.id +\r\n                 '\", ts=\"' + artifacts.ts +\r\n                 '\", nonce=\"' + artifacts.nonce +\r\n                 (artifacts.hash ? '\", hash=\"' + artifacts.hash : '') +\r\n                 (hasExt ? '\", ext=\"' + Utils.escapeHeaderAttribute(artifacts.ext) : '') +\r\n                 '\", mac=\"' + mac + '\"';\r\n\r\n    if (artifacts.app) {\r\n        header += ', app=\"' + artifacts.app +\r\n                  (artifacts.dlg ? '\", dlg=\"' + artifacts.dlg : '') + '\"';\r\n    }\r\n\r\n    result.field = header;\r\n\r\n    return result;\r\n};\r\n\r\n\r\n// Validate server response\r\n\r\n/*\r\n    res:        node's response object\r\n    artifacts:  object recieved from header().artifacts\r\n    options: {\r\n        payload:    optional payload received\r\n        required:   specifies if a Server-Authorization header is required. Defaults to 'false'\r\n    }\r\n*/\r\n\r\nexports.authenticate = function (res, credentials, artifacts, options) {\r\n\r\n    artifacts = Hoek.clone(artifacts);\r\n    options = options || {};\r\n\r\n    if (res.headers['www-authenticate']) {\r\n\r\n        // Parse HTTP WWW-Authenticate header\r\n\r\n        var attributes = Utils.parseAuthorizationHeader(res.headers['www-authenticate'], ['ts', 'tsm', 'error']);\r\n        if (attributes instanceof Error) {\r\n            return false;\r\n        }\r\n\r\n        if (attributes.ts) {\r\n            var tsm = Crypto.calculateTsMac(attributes.ts, credentials);\r\n            if (tsm !== attributes.tsm) {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n\r\n    // Parse HTTP Server-Authorization header\r\n\r\n    if (!res.headers['server-authorization'] &&\r\n        !options.required) {\r\n\r\n        return true;\r\n    }\r\n\r\n    var attributes = Utils.parseAuthorizationHeader(res.headers['server-authorization'], ['mac', 'ext', 'hash']);\r\n    if (attributes instanceof Error) {\r\n        return false;\r\n    }\r\n\r\n    artifacts.ext = attributes.ext;\r\n    artifacts.hash = attributes.hash;\r\n\r\n    var mac = Crypto.calculateMac('response', credentials, artifacts);\r\n    if (mac !== attributes.mac) {\r\n        return false;\r\n    }\r\n\r\n    if (!options.hasOwnProperty('payload')) {\r\n        return true;\r\n    }\r\n\r\n    if (!attributes.hash) {\r\n        return false;\r\n    }\r\n\r\n    var calculatedHash = Crypto.calculatePayloadHash(options.payload, credentials.algorithm, res.headers['content-type']);\r\n    return (calculatedHash === attributes.hash);\r\n};\r\n\r\n\r\n// Generate a bewit value for a given URI\r\n\r\n/*\r\n * credentials is an object with the following keys: 'id, 'key', 'algorithm'.\r\n * options is an object with the following optional keys: 'ext', 'localtimeOffsetMsec'\r\n */\r\n/*\r\n    uri: 'http://example.com/resource?a=b' or object from Url.parse()\r\n    options: {\r\n\r\n        // Required\r\n\r\n        credentials: {\r\n            id: 'dh37fgj492je',\r\n            key: 'aoijedoaijsdlaksjdl',\r\n            algorithm: 'sha256'                             // 'sha1', 'sha256'\r\n        },\r\n        ttlSec: 60 * 60,                                    // TTL in seconds\r\n\r\n        // Optional\r\n\r\n        ext: 'application-specific',                        // Application specific data sent via the ext attribute\r\n        localtimeOffsetMsec: 400                            // Time offset to sync with server time\r\n    };\r\n*/\r\n\r\nexports.getBewit = function (uri, options) {\r\n\r\n    // Validate inputs\r\n\r\n    if (!uri ||\r\n        (typeof uri !== 'string' && typeof uri !== 'object') ||\r\n        !options ||\r\n        typeof options !== 'object' ||\r\n        !options.ttlSec) {\r\n\r\n        return '';\r\n    }\r\n\r\n    options.ext = (options.ext === null || options.ext === undefined ? '' : options.ext);       // Zero is valid value\r\n\r\n    // Application time\r\n\r\n    var now = Utils.now() + (options.localtimeOffsetMsec || 0);\r\n\r\n    // Validate credentials\r\n\r\n    var credentials = options.credentials;\r\n    if (!credentials ||\r\n        !credentials.id ||\r\n        !credentials.key ||\r\n        !credentials.algorithm) {\r\n\r\n        return '';\r\n    }\r\n\r\n    if (Crypto.algorithms.indexOf(credentials.algorithm) === -1) {\r\n        return '';\r\n    }\r\n\r\n    // Parse URI\r\n\r\n    if (typeof uri === 'string') {\r\n        uri = Url.parse(uri);\r\n    }\r\n\r\n    // Calculate signature\r\n\r\n    var exp = Math.floor(now / 1000) + options.ttlSec;\r\n    var mac = Crypto.calculateMac('bewit', credentials, {\r\n        ts: exp,\r\n        nonce: '',\r\n        method: 'GET',\r\n        resource: uri.pathname + (uri.search || ''),                            // Maintain trailing '?'\r\n        host: uri.hostname,\r\n        port: uri.port || (uri.protocol === 'http:' ? 80 : 443),\r\n        ext: options.ext\r\n    });\r\n\r\n    // Construct bewit: id\\exp\\mac\\ext\r\n\r\n    var bewit = credentials.id + '\\\\' + exp + '\\\\' + mac + '\\\\' + options.ext;\r\n    return Utils.base64urlEncode(bewit);\r\n};\r\n\r\n"]},"metadata":{},"sourceType":"script"}