{"ast":null,"code":"// Load modules\nvar Dgram = require('dgram');\n\nvar Dns = require('dns');\n\nvar Hoek = require('hoek'); // Declare internals\n\n\nvar internals = {};\n\nexports.time = function (options, callback) {\n  if (arguments.length !== 2) {\n    callback = arguments[0];\n    options = {};\n  }\n\n  var settings = Hoek.clone(options);\n  settings.host = settings.host || 'pool.ntp.org';\n  settings.port = settings.port || 123;\n  settings.resolveReference = settings.resolveReference || false; // Declare variables used by callback\n\n  var timeoutId = 0;\n  var sent = 0; // Ensure callback is only called once\n\n  var isFinished = false;\n\n  var finish = function (err, result) {\n    if (timeoutId) {\n      clearTimeout(timeoutId);\n      timeoutId = 0;\n    }\n\n    if (!isFinished) {\n      isFinished = true;\n      socket.removeAllListeners();\n      socket.close();\n      return callback(err, result);\n    }\n  }; // Create UDP socket\n\n\n  var socket = Dgram.createSocket('udp4');\n  socket.once('error', function (err) {\n    return finish(err);\n  }); // Listen to incoming messages\n\n  socket.on('message', function (buffer, rinfo) {\n    var received = Date.now();\n    var message = new internals.NtpMessage(buffer);\n\n    if (!message.isValid) {\n      return finish(new Error('Invalid server response'), message);\n    }\n\n    if (message.originateTimestamp !== sent) {\n      return finish(new Error('Wrong originate timestamp'), message);\n    } // Timestamp Name          ID   When Generated\n    // ------------------------------------------------------------\n    // Originate Timestamp     T1   time request sent by client\n    // Receive Timestamp       T2   time request received by server\n    // Transmit Timestamp      T3   time reply sent by server\n    // Destination Timestamp   T4   time reply received by client\n    //\n    // The roundtrip delay d and system clock offset t are defined as:\n    //\n    // d = (T4 - T1) - (T3 - T2)     t = ((T2 - T1) + (T3 - T4)) / 2\n\n\n    var T1 = message.originateTimestamp;\n    var T2 = message.receiveTimestamp;\n    var T3 = message.transmitTimestamp;\n    var T4 = received;\n    message.d = T4 - T1 - (T3 - T2);\n    message.t = (T2 - T1 + (T3 - T4)) / 2;\n    message.receivedLocally = received;\n\n    if (!settings.resolveReference || message.stratum !== 'secondary') {\n      return finish(null, message);\n    } // Resolve reference IP address\n\n\n    Dns.reverse(message.referenceId, function (err, domains) {\n      if (!err) {\n        message.referenceHost = domains[0];\n      }\n\n      return finish(null, message);\n    });\n  }); // Set timeout\n\n  if (settings.timeout) {\n    timeoutId = setTimeout(function () {\n      timeoutId = 0;\n      return finish(new Error('Timeout'));\n    }, settings.timeout);\n  } // Construct NTP message\n\n\n  var message = new Buffer(48);\n\n  for (var i = 0; i < 48; i++) {\n    // Zero message\n    message[i] = 0;\n  }\n\n  message[0] = (0 << 6) + (4 << 3) + (3 << 0); // Set version number to 4 and Mode to 3 (client)\n\n  sent = Date.now();\n  internals.fromMsecs(sent, message, 40); // Set transmit timestamp (returns as originate)\n  // Send NTP request\n\n  socket.send(message, 0, message.length, settings.port, settings.host, function (err, bytes) {\n    if (err || bytes !== 48) {\n      return finish(err || new Error('Could not send entire message'));\n    }\n  });\n};\n\ninternals.NtpMessage = function (buffer) {\n  this.isValid = false; // Validate\n\n  if (buffer.length !== 48) {\n    return;\n  } // Leap indicator\n\n\n  var li = buffer[0] >> 6;\n\n  switch (li) {\n    case 0:\n      this.leapIndicator = 'no-warning';\n      break;\n\n    case 1:\n      this.leapIndicator = 'last-minute-61';\n      break;\n\n    case 2:\n      this.leapIndicator = 'last-minute-59';\n      break;\n\n    case 3:\n      this.leapIndicator = 'alarm';\n      break;\n  } // Version\n\n\n  var vn = (buffer[0] & 0x38) >> 3;\n  this.version = vn; // Mode\n\n  var mode = buffer[0] & 0x7;\n\n  switch (mode) {\n    case 1:\n      this.mode = 'symmetric-active';\n      break;\n\n    case 2:\n      this.mode = 'symmetric-passive';\n      break;\n\n    case 3:\n      this.mode = 'client';\n      break;\n\n    case 4:\n      this.mode = 'server';\n      break;\n\n    case 5:\n      this.mode = 'broadcast';\n      break;\n\n    case 0:\n    case 6:\n    case 7:\n      this.mode = 'reserved';\n      break;\n  } // Stratum\n\n\n  var stratum = buffer[1];\n\n  if (stratum === 0) {\n    this.stratum = 'death';\n  } else if (stratum === 1) {\n    this.stratum = 'primary';\n  } else if (stratum <= 15) {\n    this.stratum = 'secondary';\n  } else {\n    this.stratum = 'reserved';\n  } // Poll interval (msec)\n\n\n  this.pollInterval = Math.round(Math.pow(2, buffer[2])) * 1000; // Precision (msecs)\n\n  this.precision = Math.pow(2, buffer[3]) * 1000; // Root delay (msecs)\n\n  var rootDelay = 256 * (256 * (256 * buffer[4] + buffer[5]) + buffer[6]) + buffer[7];\n  this.rootDelay = 1000 * (rootDelay / 0x10000); // Root dispersion (msecs)\n\n  this.rootDispersion = ((buffer[8] << 8) + buffer[9] + ((buffer[10] << 8) + buffer[11]) / Math.pow(2, 16)) * 1000; // Reference identifier\n\n  this.referenceId = '';\n\n  switch (this.stratum) {\n    case 'death':\n    case 'primary':\n      this.referenceId = String.fromCharCode(buffer[12]) + String.fromCharCode(buffer[13]) + String.fromCharCode(buffer[14]) + String.fromCharCode(buffer[15]);\n      break;\n\n    case 'secondary':\n      this.referenceId = '' + buffer[12] + '.' + buffer[13] + '.' + buffer[14] + '.' + buffer[15];\n      break;\n  } // Reference timestamp\n\n\n  this.referenceTimestamp = internals.toMsecs(buffer, 16); // Originate timestamp\n\n  this.originateTimestamp = internals.toMsecs(buffer, 24); // Receive timestamp\n\n  this.receiveTimestamp = internals.toMsecs(buffer, 32); // Transmit timestamp\n\n  this.transmitTimestamp = internals.toMsecs(buffer, 40); // Validate\n\n  if (this.version === 4 && this.stratum !== 'reserved' && this.mode === 'server' && this.originateTimestamp && this.receiveTimestamp && this.transmitTimestamp) {\n    this.isValid = true;\n  }\n\n  return this;\n};\n\ninternals.toMsecs = function (buffer, offset) {\n  var seconds = 0;\n  var fraction = 0;\n\n  for (var i = 0; i < 4; ++i) {\n    seconds = seconds * 256 + buffer[offset + i];\n  }\n\n  for (i = 4; i < 8; ++i) {\n    fraction = fraction * 256 + buffer[offset + i];\n  }\n\n  return (seconds - 2208988800 + fraction / Math.pow(2, 32)) * 1000;\n};\n\ninternals.fromMsecs = function (ts, buffer, offset) {\n  var seconds = Math.floor(ts / 1000) + 2208988800;\n  var fraction = Math.round(ts % 1000 / 1000 * Math.pow(2, 32));\n  buffer[offset + 0] = (seconds & 0xFF000000) >> 24;\n  buffer[offset + 1] = (seconds & 0x00FF0000) >> 16;\n  buffer[offset + 2] = (seconds & 0x0000FF00) >> 8;\n  buffer[offset + 3] = seconds & 0x000000FF;\n  buffer[offset + 4] = (fraction & 0xFF000000) >> 24;\n  buffer[offset + 5] = (fraction & 0x00FF0000) >> 16;\n  buffer[offset + 6] = (fraction & 0x0000FF00) >> 8;\n  buffer[offset + 7] = fraction & 0x000000FF;\n}; // Offset singleton\n\n\ninternals.last = {\n  offset: 0,\n  expires: 0,\n  host: '',\n  port: 0\n};\n\nexports.offset = function (options, callback) {\n  if (arguments.length !== 2) {\n    callback = arguments[0];\n    options = {};\n  }\n\n  var now = Date.now();\n  var clockSyncRefresh = options.clockSyncRefresh || 24 * 60 * 60 * 1000; // Daily\n\n  if (internals.last.offset && internals.last.host === options.host && internals.last.port === options.port && now < internals.last.expires) {\n    process.nextTick(function () {\n      callback(null, internals.last.offset);\n    });\n    return;\n  }\n\n  exports.time(options, function (err, time) {\n    if (err) {\n      return callback(err, 0);\n    }\n\n    internals.last = {\n      offset: Math.round(time.t),\n      expires: now + clockSyncRefresh,\n      host: options.host,\n      port: options.port\n    };\n    return callback(null, internals.last.offset);\n  });\n}; // Now singleton\n\n\ninternals.now = {\n  intervalId: 0\n};\n\nexports.start = function (options, callback) {\n  if (arguments.length !== 2) {\n    callback = arguments[0];\n    options = {};\n  }\n\n  if (internals.now.intervalId) {\n    process.nextTick(function () {\n      callback();\n    });\n    return;\n  }\n\n  exports.offset(options, function (err, offset) {\n    internals.now.intervalId = setInterval(function () {\n      exports.offset(options, function () {});\n    }, options.clockSyncRefresh || 24 * 60 * 60 * 1000); // Daily\n\n    return callback();\n  });\n};\n\nexports.stop = function () {\n  if (!internals.now.intervalId) {\n    return;\n  }\n\n  clearInterval(internals.now.intervalId);\n  internals.now.intervalId = 0;\n};\n\nexports.isLive = function () {\n  return !!internals.now.intervalId;\n};\n\nexports.now = function () {\n  var now = Date.now();\n\n  if (!exports.isLive() || now >= internals.last.expires) {\n    return now;\n  }\n\n  return now + internals.last.offset;\n};","map":{"version":3,"sources":["/home/hayaz/haya/haya/hosters.pk/node_modules/whmcs/node_modules/sntp/lib/index.js"],"names":["Dgram","require","Dns","Hoek","internals","exports","time","options","callback","arguments","length","settings","clone","host","port","resolveReference","timeoutId","sent","isFinished","finish","err","result","clearTimeout","socket","removeAllListeners","close","createSocket","once","on","buffer","rinfo","received","Date","now","message","NtpMessage","isValid","Error","originateTimestamp","T1","T2","receiveTimestamp","T3","transmitTimestamp","T4","d","t","receivedLocally","stratum","reverse","referenceId","domains","referenceHost","timeout","setTimeout","Buffer","i","fromMsecs","send","bytes","li","leapIndicator","vn","version","mode","pollInterval","Math","round","pow","precision","rootDelay","rootDispersion","String","fromCharCode","referenceTimestamp","toMsecs","offset","seconds","fraction","ts","floor","last","expires","clockSyncRefresh","process","nextTick","intervalId","start","setInterval","stop","clearInterval","isLive"],"mappings":"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","sourcesContent":["// Load modules\n\nvar Dgram = require('dgram');\nvar Dns = require('dns');\nvar Hoek = require('hoek');\n\n\n// Declare internals\n\nvar internals = {};\n\n\nexports.time = function (options, callback) {\n\n    if (arguments.length !== 2) {\n        callback = arguments[0];\n        options = {};\n    }\n\n    var settings = Hoek.clone(options);\n    settings.host = settings.host || 'pool.ntp.org';\n    settings.port = settings.port || 123;\n    settings.resolveReference = settings.resolveReference || false;\n\n    // Declare variables used by callback\n\n    var timeoutId = 0;\n    var sent = 0;\n\n    // Ensure callback is only called once\n\n    var isFinished = false;\n    var finish = function (err, result) {\n\n        if (timeoutId) {\n            clearTimeout(timeoutId);\n            timeoutId = 0;\n        }\n\n        if (!isFinished) {\n            isFinished = true;\n            socket.removeAllListeners();\n            socket.close();\n            return callback(err, result);\n        }\n    };\n\n    // Create UDP socket\n\n    var socket = Dgram.createSocket('udp4');\n\n    socket.once('error', function (err) {\n\n        return finish(err);\n    });\n\n    // Listen to incoming messages\n\n    socket.on('message', function (buffer, rinfo) {\n\n        var received = Date.now();\n\n        var message = new internals.NtpMessage(buffer);\n        if (!message.isValid) {\n            return finish(new Error('Invalid server response'), message);\n        }\n\n        if (message.originateTimestamp !== sent) {\n            return finish(new Error('Wrong originate timestamp'), message);\n        }\n\n        // Timestamp Name          ID   When Generated\n        // ------------------------------------------------------------\n        // Originate Timestamp     T1   time request sent by client\n        // Receive Timestamp       T2   time request received by server\n        // Transmit Timestamp      T3   time reply sent by server\n        // Destination Timestamp   T4   time reply received by client\n        //\n        // The roundtrip delay d and system clock offset t are defined as:\n        //\n        // d = (T4 - T1) - (T3 - T2)     t = ((T2 - T1) + (T3 - T4)) / 2\n\n        var T1 = message.originateTimestamp;\n        var T2 = message.receiveTimestamp;\n        var T3 = message.transmitTimestamp;\n        var T4 = received;\n\n        message.d = (T4 - T1) - (T3 - T2);\n        message.t = ((T2 - T1) + (T3 - T4)) / 2;\n        message.receivedLocally = received;\n\n        if (!settings.resolveReference ||\n            message.stratum !== 'secondary') {\n\n            return finish(null, message);\n        }\n\n        // Resolve reference IP address\n\n        Dns.reverse(message.referenceId, function (err, domains) {\n\n            if (!err) {\n                message.referenceHost = domains[0];\n            }\n\n            return finish(null, message);\n        });\n    });\n\n    // Set timeout\n\n    if (settings.timeout) {\n        timeoutId = setTimeout(function () {\n\n            timeoutId = 0;\n            return finish(new Error('Timeout'));\n        }, settings.timeout);\n    }\n\n    // Construct NTP message\n\n    var message = new Buffer(48);\n    for (var i = 0; i < 48; i++) {                      // Zero message\n        message[i] = 0;\n    }\n\n    message[0] = (0 << 6) + (4 << 3) + (3 << 0)         // Set version number to 4 and Mode to 3 (client)\n    sent = Date.now();\n    internals.fromMsecs(sent, message, 40);               // Set transmit timestamp (returns as originate)\n\n    // Send NTP request\n\n    socket.send(message, 0, message.length, settings.port, settings.host, function (err, bytes) {\n\n        if (err ||\n            bytes !== 48) {\n\n            return finish(err || new Error('Could not send entire message'));\n        }\n    });\n};\n\n\ninternals.NtpMessage = function (buffer) {\n\n    this.isValid = false;\n\n    // Validate\n\n    if (buffer.length !== 48) {\n        return;\n    }\n\n    // Leap indicator\n\n    var li = (buffer[0] >> 6);\n    switch (li) {\n        case 0: this.leapIndicator = 'no-warning'; break;\n        case 1: this.leapIndicator = 'last-minute-61'; break;\n        case 2: this.leapIndicator = 'last-minute-59'; break;\n        case 3: this.leapIndicator = 'alarm'; break;\n    }\n\n    // Version\n\n    var vn = ((buffer[0] & 0x38) >> 3);\n    this.version = vn;\n\n    // Mode\n\n    var mode = (buffer[0] & 0x7);\n    switch (mode) {\n        case 1: this.mode = 'symmetric-active'; break;\n        case 2: this.mode = 'symmetric-passive'; break;\n        case 3: this.mode = 'client'; break;\n        case 4: this.mode = 'server'; break;\n        case 5: this.mode = 'broadcast'; break;\n        case 0:\n        case 6:\n        case 7: this.mode = 'reserved'; break;\n    }\n\n    // Stratum\n\n    var stratum = buffer[1];\n    if (stratum === 0) {\n        this.stratum = 'death';\n    }\n    else if (stratum === 1) {\n        this.stratum = 'primary';\n    }\n    else if (stratum <= 15) {\n        this.stratum = 'secondary';\n    }\n    else {\n        this.stratum = 'reserved';\n    }\n\n    // Poll interval (msec)\n\n    this.pollInterval = Math.round(Math.pow(2, buffer[2])) * 1000;\n\n    // Precision (msecs)\n\n    this.precision = Math.pow(2, buffer[3]) * 1000;\n\n    // Root delay (msecs)\n\n    var rootDelay = 256 * (256 * (256 * buffer[4] + buffer[5]) + buffer[6]) + buffer[7];\n    this.rootDelay = 1000 * (rootDelay / 0x10000);\n\n    // Root dispersion (msecs)\n\n    this.rootDispersion = ((buffer[8] << 8) + buffer[9] + ((buffer[10] << 8) + buffer[11]) / Math.pow(2, 16)) * 1000;\n\n    // Reference identifier\n\n    this.referenceId = '';\n    switch (this.stratum) {\n        case 'death':\n        case 'primary':\n            this.referenceId = String.fromCharCode(buffer[12]) + String.fromCharCode(buffer[13]) + String.fromCharCode(buffer[14]) + String.fromCharCode(buffer[15]);\n            break;\n        case 'secondary':\n            this.referenceId = '' + buffer[12] + '.' + buffer[13] + '.' + buffer[14] + '.' + buffer[15];\n            break;\n    }\n\n    // Reference timestamp\n\n    this.referenceTimestamp = internals.toMsecs(buffer, 16);\n\n    // Originate timestamp\n\n    this.originateTimestamp = internals.toMsecs(buffer, 24);\n\n    // Receive timestamp\n\n    this.receiveTimestamp = internals.toMsecs(buffer, 32);\n\n    // Transmit timestamp\n\n    this.transmitTimestamp = internals.toMsecs(buffer, 40);\n\n    // Validate\n\n    if (this.version === 4 &&\n        this.stratum !== 'reserved' &&\n        this.mode === 'server' &&\n        this.originateTimestamp &&\n        this.receiveTimestamp &&\n        this.transmitTimestamp) {\n\n        this.isValid = true;\n    }\n\n    return this;\n};\n\n\ninternals.toMsecs = function (buffer, offset) {\n\n    var seconds = 0;\n    var fraction = 0;\n\n    for (var i = 0; i < 4; ++i) {\n        seconds = (seconds * 256) + buffer[offset + i];\n    }\n\n    for (i = 4; i < 8; ++i) {\n        fraction = (fraction * 256) + buffer[offset + i];\n    }\n\n    return ((seconds - 2208988800 + (fraction / Math.pow(2, 32))) * 1000);\n};\n\n\ninternals.fromMsecs = function (ts, buffer, offset) {\n\n    var seconds = Math.floor(ts / 1000) + 2208988800;\n    var fraction = Math.round((ts % 1000) / 1000 * Math.pow(2, 32));\n\n    buffer[offset + 0] = (seconds & 0xFF000000) >> 24;\n    buffer[offset + 1] = (seconds & 0x00FF0000) >> 16;\n    buffer[offset + 2] = (seconds & 0x0000FF00) >> 8;\n    buffer[offset + 3] = (seconds & 0x000000FF);\n\n    buffer[offset + 4] = (fraction & 0xFF000000) >> 24;\n    buffer[offset + 5] = (fraction & 0x00FF0000) >> 16;\n    buffer[offset + 6] = (fraction & 0x0000FF00) >> 8;\n    buffer[offset + 7] = (fraction & 0x000000FF);\n};\n\n\n// Offset singleton\n\ninternals.last = {\n    offset: 0,\n    expires: 0,\n    host: '',\n    port: 0\n};\n\n\nexports.offset = function (options, callback) {\n\n    if (arguments.length !== 2) {\n        callback = arguments[0];\n        options = {};\n    }\n\n    var now = Date.now();\n    var clockSyncRefresh = options.clockSyncRefresh || 24 * 60 * 60 * 1000;                    // Daily\n\n    if (internals.last.offset &&\n        internals.last.host === options.host &&\n        internals.last.port === options.port &&\n        now < internals.last.expires) {\n\n        process.nextTick(function () {\n                \n            callback(null, internals.last.offset);\n        });\n\n        return;\n    }\n\n    exports.time(options, function (err, time) {\n\n        if (err) {\n            return callback(err, 0);\n        }\n\n        internals.last = {\n            offset: Math.round(time.t),\n            expires: now + clockSyncRefresh,\n            host: options.host,\n            port: options.port\n        };\n\n        return callback(null, internals.last.offset);\n    });\n};\n\n\n// Now singleton\n\ninternals.now = {\n    intervalId: 0\n};\n\n\nexports.start = function (options, callback) {\n\n    if (arguments.length !== 2) {\n        callback = arguments[0];\n        options = {};\n    }\n\n    if (internals.now.intervalId) {\n        process.nextTick(function () {\n            \n            callback();\n        });\n        \n        return;\n    }\n\n    exports.offset(options, function (err, offset) {\n\n        internals.now.intervalId = setInterval(function () {\n\n            exports.offset(options, function () { });\n        }, options.clockSyncRefresh || 24 * 60 * 60 * 1000);                                // Daily\n\n        return callback();\n    });\n};\n\n\nexports.stop = function () {\n\n    if (!internals.now.intervalId) {\n        return;\n    }\n\n    clearInterval(internals.now.intervalId);\n    internals.now.intervalId = 0;\n};\n\n\nexports.isLive = function () {\n\n    return !!internals.now.intervalId;\n};\n\n\nexports.now = function () {\n\n    var now = Date.now();\n    if (!exports.isLive() ||\n        now >= internals.last.expires) {\n\n        return now;\n    }\n\n    return now + internals.last.offset;\n};\n\n"]},"metadata":{},"sourceType":"script"}